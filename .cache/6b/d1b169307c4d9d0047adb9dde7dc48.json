{"id":"../node_modules/@tensorflow/tfjs-data/dist/datasource.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\datasource.js.map","includedInParent":true,"mtime":1595498163410},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\src\\datasource.ts","includedInParent":true,"mtime":1595498163410},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\package.json","includedInParent":true,"mtime":1595498163410}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataSource = void 0;\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/**\n * Represents a data source readable as a stream of binary data chunks.\n *\n * Because `Dataset`s can be read repeatedly (via `Dataset.iterator()`), this\n * provides a means to repeatedly create streams from the underlying data\n * sources.\n */\nclass DataSource {} // TODO(soergel): consider convenience factory functions here\n// in combination with chainable source->dataset above, e.g.:\n// tf.data.url(...).asCsvDataset().shuffle().batch()\n\n\nexports.DataSource = DataSource;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/datasource.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":26,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":33,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":33,"column":6}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":33,"column":16}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":32},"generated":{"line":33,"column":17}},{"source":"../src/datasource.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":33,"column":20}},{"source":"../src/datasource.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":34,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":35,"column":0}}],"sources":{"../src/datasource.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\nimport {ByteChunkIterator} from './iterators/byte_chunk_iterator';\n\n/**\n * Represents a data source readable as a stream of binary data chunks.\n *\n * Because `Dataset`s can be read repeatedly (via `Dataset.iterator()`), this\n * provides a means to repeatedly create streams from the underlying data\n * sources.\n */\nexport abstract class DataSource {\n  /**\n   * Obtain a new stream of binary data chunks.\n   *\n   * Starts the new stream from the beginning of the data source, even if other\n   * streams have been obtained previously.\n   */\n  abstract async iterator(): Promise<ByteChunkIterator>;\n\n  // TODO(soergel): consider chainable Dataset construction here\n}\n\n// TODO(soergel): consider convenience factory functions here\n// in combination with chainable source->dataset above, e.g.:\n// tf.data.url(...).asCsvDataset().shuffle().batch()\n"},"lineCount":null}},"error":null,"hash":"9eb1171df28783bc2c96ab56cc1a2426","cacheData":{"env":{}}}
{"id":"../node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\encode_matrix_gpu.js.map","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\encode_matrix_gpu.ts","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1595498163407},{"name":"./glsl_version","loc":{"line":17,"column":35},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\encode_matrix_gpu.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\glsl_version.js"},{"name":"./shader_compiler_util","loc":{"line":18,"column":29},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\encode_matrix_gpu.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\shader_compiler_util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EncodeMatrixProgram = void 0;\n\nvar _glsl_version = require(\"./glsl_version\");\n\nvar shader_util = _interopRequireWildcard(require(\"./shader_compiler_util\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass EncodeMatrixProgram {\n  constructor(outputShape, texShape, inputIsUnsignedByte = false) {\n    this.variableNames = ['A'];\n    const glsl = (0, _glsl_version.getGlslDifferences)();\n    const [height, width] = texShape;\n    this.outputShape = outputShape;\n    let output = `result`;\n\n    if (inputIsUnsignedByte) {\n      output = `floor(result * 255. + 0.5)`;\n    }\n\n    this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / ${width};\n        int c = imod(flatIndex, ${width});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n        vec4 values = ${glsl.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${glsl.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `;\n  }\n\n}\n\nexports.EncodeMatrixProgram = EncodeMatrixProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":32,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":32,"column":6}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":32,"column":25}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":22,"column":32},"generated":{"line":32,"column":26}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":33,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":33,"column":2}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":33,"column":13}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":33,"column":14}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":33,"column":25}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":28,"column":45},"generated":{"line":33,"column":27}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":33,"column":35}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":33,"column":37}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":33,"column":56}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":33,"column":59}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":33,"column":64}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":33,"column":66}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":34,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":34,"column":9}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":34,"column":22}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":34,"column":25}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":34,"column":26}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":34,"column":29}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":34,"column":30}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":35,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":35,"column":10}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":35,"column":14}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":35,"column":17}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":35,"column":56}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":36,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":36,"column":10}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":36,"column":11}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":36,"column":17}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":36,"column":19}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":36,"column":24}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":36,"column":28}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":36,"column":36}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":37,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":37,"column":9}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":37,"column":20}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":32,"column":23},"generated":{"line":37,"column":23}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":37,"column":34}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":38,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":38,"column":8}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":38,"column":14}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":34,"column":17},"generated":{"line":38,"column":17}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":38,"column":25}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":40,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":40,"column":8}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":40,"column":27}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":35,"column":29},"generated":{"line":40,"column":29}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":41,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":41,"column":6}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":36,"column":12},"generated":{"line":41,"column":12}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":41,"column":15}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":41,"column":43}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":37,"column":5},"generated":{"line":42,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":44,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":44,"column":9}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":44,"column":17}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":44,"column":20}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":45,"column":8}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":19},"generated":{"line":45,"column":19}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":45,"column":20}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":45,"column":38}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":39},"generated":{"line":45,"column":39}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":45,"column":50}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":40,"column":51},"generated":{"line":45,"column":51}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":50,"column":30},"generated":{"line":55,"column":30}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":50,"column":35},"generated":{"line":55,"column":35}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":51,"column":34},"generated":{"line":56,"column":34}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":51,"column":39},"generated":{"line":56,"column":39}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":52,"column":49},"generated":{"line":57,"column":49}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":52,"column":54},"generated":{"line":57,"column":54}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":52,"column":61},"generated":{"line":57,"column":61}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":52,"column":67},"generated":{"line":57,"column":67}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":53,"column":24},"generated":{"line":58,"column":24}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":53,"column":28},"generated":{"line":58,"column":28}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":53,"column":29},"generated":{"line":58,"column":29}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":53,"column":38},"generated":{"line":58,"column":38}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":72,"column":10}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":67,"column":14},"generated":{"line":72,"column":14}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":67,"column":15},"generated":{"line":72,"column":15}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":67,"column":21},"generated":{"line":72,"column":21}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":67,"column":32},"generated":{"line":72,"column":32}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":67,"column":38},"generated":{"line":72,"column":38}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":74,"column":5}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":70,"column":3},"generated":{"line":75,"column":0}},{"source":"../src/encode_matrix_gpu.ts","name":null,"original":{"line":22,"column":32},"generated":{"line":77,"column":0}}],"sources":{"../src/encode_matrix_gpu.ts":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport * as shader_util from './shader_compiler_util';\n\nexport class EncodeMatrixProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(\n      outputShape: [number, number, number], texShape: [number, number],\n      inputIsUnsignedByte = false) {\n    const glsl = getGlslDifferences();\n    const [height, width] = texShape;\n    this.outputShape = outputShape;\n\n    let output = `result`;\n    if (inputIsUnsignedByte) {\n      output = `floor(result * 255. + 0.5)`;\n    }\n\n    this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / ${width};\n        int c = imod(flatIndex, ${width});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n        vec4 values = ${glsl.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${glsl.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"b3272189768a132d76d19e00467f518c","cacheData":{"env":{}}}
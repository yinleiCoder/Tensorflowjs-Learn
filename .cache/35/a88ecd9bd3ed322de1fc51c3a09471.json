{"id":"../node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\space_to_batch_nd.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\space_to_batch_nd.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399},{"name":"../engine","loc":{"line":17,"column":23},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\space_to_batch_nd.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":31},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\space_to_batch_nd.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\space_to_batch_nd.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"../util","loc":{"line":20,"column":22},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\space_to_batch_nd.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\util.js"},{"name":"./operation","loc":{"line":21,"column":19},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\space_to_batch_nd.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.spaceToBatchND = void 0;\n\nvar _engine = require(\"../engine\");\n\nvar _kernel_names = require(\"../kernel_names\");\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\nvar _operation = require(\"./operation\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n */\n\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction spaceToBatchND_(x, blockShape, paddings) {\n  const $x = (0, _tensor_util_env.convertToTensor)(x, 'x', 'spaceToBatchND');\n  util.assert($x.rank >= 1 + blockShape.length, () => `input rank ${$x.rank} should be > than [blockShape] ${blockShape.length}`);\n  util.assert(paddings.length === blockShape.length, () => `paddings.shape[0] ${paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n  util.assert($x.shape.reduce((a, b, i) => {\n    if (i > 0 && i <= blockShape.length) {\n      return a && (b + paddings[i - 1][0] + paddings[i - 1][1]) % blockShape[i - 1] === 0;\n    }\n\n    return a;\n  }, true), () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${paddings.toString()} must be divisible by blockShapes ${blockShape.toString()}`);\n\n  const forward = backend => backend.spaceToBatchND($x, blockShape, paddings);\n\n  const inputs = {\n    x: $x\n  };\n  const attrs = {\n    blockShape,\n    paddings\n  };\n  return _engine.ENGINE.runKernelFunc(forward, inputs, null\n  /* gradient */\n  , _kernel_names.SpaceToBatchND, attrs);\n}\n\nconst spaceToBatchND = (0, _operation.op)({\n  spaceToBatchND_\n});\nexports.spaceToBatchND = spaceToBatchND;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":22,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":39,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":75,"column":0},"generated":{"line":86,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":87,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":76,"column":9},"generated":{"line":87,"column":9}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":87,"column":24}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":87,"column":25}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":87,"column":26}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":77,"column":21},"generated":{"line":87,"column":28}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":87,"column":38}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":77,"column":43},"generated":{"line":87,"column":40}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":87,"column":48}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":77,"column":63},"generated":{"line":87,"column":50}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":88,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":8},"generated":{"line":88,"column":8}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":10},"generated":{"line":88,"column":10}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":88,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":29},"generated":{"line":88,"column":51}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":88,"column":52}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":32},"generated":{"line":88,"column":54}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":88,"column":57}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":37},"generated":{"line":88,"column":59}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":88,"column":75}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":88,"column":76}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":2}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":89,"column":6}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":7},"generated":{"line":89,"column":7}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":89,"column":14}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":8},"generated":{"line":89,"column":16}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":9},"generated":{"line":89,"column":17}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":89,"column":21}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":17},"generated":{"line":89,"column":25}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":21},"generated":{"line":89,"column":29}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":31},"generated":{"line":89,"column":39}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":81,"column":32},"generated":{"line":89,"column":40}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":46}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":82,"column":6},"generated":{"line":89,"column":48}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":82,"column":12},"generated":{"line":89,"column":54}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":82,"column":26},"generated":{"line":89,"column":68}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":82,"column":28},"generated":{"line":89,"column":70}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":82,"column":29},"generated":{"line":89,"column":71}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":82,"column":33},"generated":{"line":89,"column":75}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":83,"column":10},"generated":{"line":89,"column":109}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":83,"column":20},"generated":{"line":89,"column":119}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":83,"column":21},"generated":{"line":89,"column":120}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":83,"column":27},"generated":{"line":89,"column":126}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":89,"column":128}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":90,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":90,"column":2}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":6},"generated":{"line":90,"column":6}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":7},"generated":{"line":90,"column":7}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":90,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":90,"column":14}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":14},"generated":{"line":90,"column":22}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":15},"generated":{"line":90,"column":23}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":90,"column":29}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":26},"generated":{"line":90,"column":34}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":36},"generated":{"line":90,"column":44}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":86,"column":37},"generated":{"line":90,"column":45}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":90,"column":51}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":87,"column":6},"generated":{"line":90,"column":53}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":87,"column":12},"generated":{"line":90,"column":59}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":10},"generated":{"line":90,"column":80}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":18},"generated":{"line":90,"column":88}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":19},"generated":{"line":90,"column":89}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":25},"generated":{"line":90,"column":95}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":59},"generated":{"line":90,"column":129}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":69},"generated":{"line":90,"column":139}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":70},"generated":{"line":90,"column":140}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":88,"column":76},"generated":{"line":90,"column":146}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":90,"column":148}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":91,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":91,"column":2}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":6},"generated":{"line":91,"column":6}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":91,"column":7}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":91,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":91,"column":14}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":91,"column":16}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":91,"column":17}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":91,"column":22}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":15},"generated":{"line":91,"column":23}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":91,"column":29}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":91,"column":30}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":11},"generated":{"line":91,"column":31}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":91,"column":32}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":14},"generated":{"line":91,"column":34}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":91,"column":35}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":17},"generated":{"line":91,"column":37}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":91,"column":38}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":92,"column":22},"generated":{"line":91,"column":43}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":12},"generated":{"line":92,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":16},"generated":{"line":92,"column":8}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":17},"generated":{"line":92,"column":9}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":20},"generated":{"line":92,"column":12}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":16},"generated":{"line":92,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":25},"generated":{"line":92,"column":17}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":26},"generated":{"line":92,"column":18}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":30},"generated":{"line":92,"column":22}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":40},"generated":{"line":92,"column":32}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":41},"generated":{"line":92,"column":33}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":12},"generated":{"line":92,"column":39}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":93,"column":49},"generated":{"line":92,"column":41}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":94,"column":14},"generated":{"line":93,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":94,"column":21},"generated":{"line":93,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":94,"column":22},"generated":{"line":93,"column":14}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":93,"column":18}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":20},"generated":{"line":93,"column":19}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":21},"generated":{"line":93,"column":20}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":93,"column":23}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":32},"generated":{"line":93,"column":31}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":33},"generated":{"line":93,"column":32}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":34},"generated":{"line":93,"column":33}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":37},"generated":{"line":93,"column":36}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":32},"generated":{"line":93,"column":37}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":93,"column":38}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":40},"generated":{"line":93,"column":39}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":93,"column":40}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":20},"generated":{"line":93,"column":41}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":93,"column":44}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":53},"generated":{"line":93,"column":52}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":54},"generated":{"line":93,"column":53}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":55},"generated":{"line":93,"column":54}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":58},"generated":{"line":93,"column":57}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":53},"generated":{"line":93,"column":58}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":93,"column":59}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":61},"generated":{"line":93,"column":60}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":93,"column":61}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":93,"column":62}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":96,"column":23},"generated":{"line":93,"column":66}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":93,"column":76}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":96,"column":34},"generated":{"line":93,"column":77}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":96,"column":35},"generated":{"line":93,"column":78}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":96,"column":38},"generated":{"line":93,"column":81}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":93,"column":82}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":93,"column":83}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":97,"column":19},"generated":{"line":93,"column":88}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":94,"column":14},"generated":{"line":93,"column":89}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":98,"column":13},"generated":{"line":94,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":99,"column":12},"generated":{"line":96,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":99,"column":19},"generated":{"line":96,"column":11}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":99,"column":12},"generated":{"line":96,"column":12}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":100,"column":11},"generated":{"line":97,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":97,"column":3}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":101,"column":10},"generated":{"line":97,"column":5}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":97,"column":9}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":97,"column":10}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":6},"generated":{"line":97,"column":12}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":12},"generated":{"line":97,"column":18}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":40},"generated":{"line":97,"column":46}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":42},"generated":{"line":97,"column":48}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":43},"generated":{"line":97,"column":49}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":40},"generated":{"line":97,"column":54}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":49},"generated":{"line":97,"column":55}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":40},"generated":{"line":97,"column":60}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":55},"generated":{"line":97,"column":61}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":40},"generated":{"line":97,"column":62}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":102,"column":57},"generated":{"line":97,"column":63}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":97,"column":81}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":103,"column":18},"generated":{"line":97,"column":89}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":103,"column":19},"generated":{"line":97,"column":90}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":97,"column":98}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":103,"column":29},"generated":{"line":97,"column":100}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":104,"column":10},"generated":{"line":97,"column":137}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":104,"column":20},"generated":{"line":97,"column":147}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":104,"column":21},"generated":{"line":97,"column":148}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":104,"column":10},"generated":{"line":97,"column":156}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":104,"column":31},"generated":{"line":97,"column":158}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":97,"column":160}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":106,"column":2},"generated":{"line":99,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":106,"column":8},"generated":{"line":99,"column":8}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":106,"column":15},"generated":{"line":99,"column":15}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":106,"column":34},"generated":{"line":99,"column":18}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":106,"column":41},"generated":{"line":99,"column":25}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":99,"column":29}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":13},"generated":{"line":99,"column":36}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":14},"generated":{"line":99,"column":37}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":99,"column":51}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":29},"generated":{"line":99,"column":52}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":99,"column":54}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":33},"generated":{"line":99,"column":56}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":99,"column":66}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":45},"generated":{"line":99,"column":68}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":99,"column":76}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":106,"column":2},"generated":{"line":99,"column":77}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":2},"generated":{"line":101,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":8},"generated":{"line":101,"column":8}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":14},"generated":{"line":101,"column":14}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":39},"generated":{"line":101,"column":17}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":40},"generated":{"line":102,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":40},"generated":{"line":102,"column":4}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":41},"generated":{"line":102,"column":5}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":43},"generated":{"line":102,"column":7}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":39},"generated":{"line":103,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":109,"column":2},"generated":{"line":103,"column":3}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":104,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":8},"generated":{"line":104,"column":8}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":13},"generated":{"line":104,"column":13}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":104,"column":16}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":38},"generated":{"line":105,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":38},"generated":{"line":105,"column":4}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":105,"column":14}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":50},"generated":{"line":106,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":50},"generated":{"line":106,"column":4}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":107,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":107,"column":3}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":108,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":108,"column":9}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":16},"generated":{"line":108,"column":24}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":108,"column":37}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":113,"column":6},"generated":{"line":108,"column":38}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":108,"column":45}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":113,"column":15},"generated":{"line":108,"column":47}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":108,"column":53}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":113,"column":47},"generated":{"line":108,"column":55}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":113,"column":52},"generated":{"line":109,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":110,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":114,"column":6},"generated":{"line":110,"column":4}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":110,"column":32}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":114,"column":22},"generated":{"line":110,"column":34}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":110,"column":39}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":110,"column":40}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":115,"column":1},"generated":{"line":111,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":113,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":13},"generated":{"line":113,"column":6}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":27},"generated":{"line":113,"column":20}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":30},"generated":{"line":113,"column":23}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":33},"generated":{"line":113,"column":42}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":114,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":114,"column":2}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":33},"generated":{"line":115,"column":0}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":30},"generated":{"line":115,"column":1}},{"source":"../../src/ops/space_to_batch_nd.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":115,"column":2}}],"sources":{"../../src/ops/space_to_batch_nd.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE, ForwardFunc} from '../engine';\nimport {SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction spaceToBatchND_<T extends Tensor>(\n    x: T|TensorLike, blockShape: number[], paddings: number[][]): T {\n  const $x = convertToTensor(x, 'x', 'spaceToBatchND');\n\n  util.assert(\n      $x.rank >= 1 + blockShape.length,\n      () => `input rank ${$x.rank} should be > than [blockShape] ${\n          blockShape.length}`);\n\n  util.assert(\n      paddings.length === blockShape.length,\n      () => `paddings.shape[0] ${\n          paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n\n  util.assert(\n      $x.shape.reduce(\n          (a, b, i) => {\n            if (i > 0 && i <= blockShape.length) {\n              return a &&\n                  ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                       blockShape[i - 1] ===\n                   0);\n            }\n            return a;\n          },\n          true),\n      () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${\n          paddings.toString()} must be divisible by blockShapes ${\n          blockShape.toString()}`);\n\n  const forward: ForwardFunc<T> = backend =>\n      backend.spaceToBatchND($x, blockShape, paddings);\n\n  const inputs: SpaceToBatchNDInputs = {x: $x};\n  const attrs: SpaceToBatchNDAttrs = {blockShape, paddings};\n\n  return ENGINE.runKernelFunc(\n      forward, inputs as {} as NamedTensorMap, null /* gradient */,\n      SpaceToBatchND, attrs as {} as NamedAttrMap);\n}\n\nexport const spaceToBatchND = op({spaceToBatchND_});\n"},"lineCount":null}},"error":null,"hash":"2c513b4f6aa8e938d9f65b38d6be5ad0","cacheData":{"env":{}}}
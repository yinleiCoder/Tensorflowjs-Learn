{"id":"../node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\binaryop_complex_gpu.js.map","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\binaryop_complex_gpu.ts","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1595498163407},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":29},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\binaryop_complex_gpu.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinaryOpComplexProgram = exports.COMPLEX_MULTIPLY = void 0;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nconst COMPLEX_MULTIPLY = {\n  REAL: 'return areal * breal - aimag * bimag;',\n  IMAG: 'return areal * bimag + aimag * breal;'\n};\nexports.COMPLEX_MULTIPLY = COMPLEX_MULTIPLY;\n\nclass BinaryOpComplexProgram {\n  constructor(op, aShape, bShape) {\n    this.variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n    this.outputShape = _tfjsCore.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    this.userCode = `\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${op}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `;\n  }\n\n}\n\nexports.BinaryOpComplexProgram = BinaryOpComplexProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":26,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":27,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":28,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":29,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":7},"generated":{"line":30,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":30,"column":6}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":30,"column":22}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":30,"column":25}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":31,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":31,"column":2}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":31,"column":6}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":31,"column":8}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":31,"column":47}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":32,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":32,"column":2}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":32,"column":6}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":32,"column":8}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":33,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":7},"generated":{"line":33,"column":1}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":36,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":36,"column":6}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":36,"column":28}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":36,"column":29}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":37,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":37,"column":2}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":37,"column":13}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":37,"column":14}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":37,"column":16}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":26},"generated":{"line":37,"column":18}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":37,"column":24}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":44},"generated":{"line":37,"column":26}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":37,"column":32}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":60},"generated":{"line":37,"column":34}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":38,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":38,"column":9}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":38,"column":22}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":38,"column":25}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":38,"column":26}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":38,"column":33}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":38,"column":35}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":38,"column":42}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":37},"generated":{"line":38,"column":44}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":38,"column":51}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":46},"generated":{"line":38,"column":53}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":38,"column":60}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":38,"column":61}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":39,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":39,"column":9}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":39,"column":20}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":23},"generated":{"line":39,"column":23}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":39,"column":46}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":23},"generated":{"line":39,"column":72}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":63},"generated":{"line":39,"column":73}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":23},"generated":{"line":39,"column":79}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":71},"generated":{"line":39,"column":81}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":23},"generated":{"line":39,"column":87}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":39,"column":88}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":40,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":40,"column":9}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":40,"column":17}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":40,"column":20}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":43,"column":10}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":41,"column":12},"generated":{"line":43,"column":12}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":53,"column":5}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":52,"column":3},"generated":{"line":54,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":56,"column":0}}],"sources":{"../src/binaryop_complex_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nexport const COMPLEX_MULTIPLY = {\n  REAL: 'return areal * breal - aimag * bimag;',\n  IMAG: 'return areal * bimag + aimag * breal;'\n};\n\nexport class BinaryOpComplexProgram implements GPGPUProgram {\n  variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(op: string, aShape: number[], bShape: number[]) {\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n\n    this.userCode = `\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${op}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"01fb6e2fd11c078a479650484400b294","cacheData":{"env":{}}}
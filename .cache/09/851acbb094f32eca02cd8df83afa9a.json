{"id":"../node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv2d_transpose.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\conv2d_transpose.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399},{"name":"../tensor_util_env","loc":{"line":1,"column":32},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv2d_transpose.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"./conv2d_backprop_input","loc":{"line":2,"column":36},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv2d_transpose.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv2d_backprop_input.js"},{"name":"./operation","loc":{"line":3,"column":19},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv2d_transpose.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.conv2dTranspose = void 0;\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _conv2d_backprop_input = require(\"./conv2d_backprop_input\");\n\nvar _operation = require(\"./operation\");\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode The rounding mode used when computing output\n *    dimensions if pad is a number. If none is provided, it will not round\n *    and error if the output is of fractional size.\n */\n\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n  const $x = (0, _tensor_util_env.convertToTensor)(x, 'x', 'conv2dTranspose');\n  const $filter = (0, _tensor_util_env.convertToTensor)(filter, 'filter', 'conv2dTranspose');\n  return (0, _conv2d_backprop_input.conv2DBackpropInput)(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\n\nconst conv2dTranspose = (0, _operation.op)({\n  conv2dTranspose_\n});\nexports.conv2dTranspose = conv2dTranspose;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":34,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":35,"column":9}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":25}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":35,"column":26}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":27}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":35,"column":29}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":35}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":35,"column":37}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":48}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":35,"column":50}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":57}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":47,"column":38},"generated":{"line":35,"column":59}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":62}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":35,"column":64}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":35,"column":79}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":48,"column":44},"generated":{"line":35,"column":81}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":36,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":36,"column":8}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":36,"column":10}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":13},"generated":{"line":36,"column":13}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":29},"generated":{"line":36,"column":51}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":13},"generated":{"line":36,"column":52}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":32},"generated":{"line":36,"column":54}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":13},"generated":{"line":36,"column":57}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":37},"generated":{"line":36,"column":59}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":13},"generated":{"line":36,"column":76}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":36,"column":77}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":37,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":37,"column":8}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":15},"generated":{"line":37,"column":15}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":37,"column":18}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":34},"generated":{"line":37,"column":56}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":37,"column":62}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":42},"generated":{"line":37,"column":64}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":37,"column":72}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":52},"generated":{"line":37,"column":74}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":37,"column":91}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":37,"column":92}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":38,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":9}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":38,"column":57}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":68}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":19},"generated":{"line":38,"column":70}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":72}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":23},"generated":{"line":38,"column":74}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":81}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":32},"generated":{"line":38,"column":83}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":90}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":41},"generated":{"line":38,"column":92}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":95}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":46},"generated":{"line":38,"column":97}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":103}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":53,"column":54},"generated":{"line":38,"column":105}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":38,"column":120}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":38,"column":121}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":54,"column":1},"generated":{"line":39,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":41,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":13},"generated":{"line":41,"column":6}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":28},"generated":{"line":41,"column":21}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":31},"generated":{"line":41,"column":24}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":34},"generated":{"line":41,"column":43}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":35},"generated":{"line":42,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":35},"generated":{"line":42,"column":2}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":34},"generated":{"line":43,"column":0}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":31},"generated":{"line":43,"column":1}},{"source":"../../src/ops/conv2d_transpose.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":43,"column":2}}],"sources":{"../../src/ops/conv2d_transpose.ts":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {conv2DBackpropInput} from './conv2d_backprop_input';\nimport {op} from './operation';\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode The rounding mode used when computing output\n *    dimensions if pad is a number. If none is provided, it will not round\n *    and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv2dTranspose_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    outputShape: [number, number, number, number]|[number, number, number],\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n\n  return conv2DBackpropInput(\n      outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\n\nexport const conv2dTranspose = op({conv2dTranspose_});\n"},"lineCount":null}},"error":null,"hash":"f1ce6cd096e4ba8615bff7866d31b216","cacheData":{"env":{}}}
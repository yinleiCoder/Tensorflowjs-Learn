{"id":"../node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\fft_gpu.js.map","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\fft_gpu.ts","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1595498163407}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FFTProgram = exports.COMPLEX_FFT = void 0;\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst COMPLEX_FFT = {\n  REAL: 'return real * expR - imag * expI;',\n  IMAG: 'return real * expI + imag * expR;'\n};\nexports.COMPLEX_FFT = COMPLEX_FFT;\n\nclass FFTProgram {\n  constructor(op, inputShape, inverse) {\n    this.variableNames = ['real', 'imag'];\n    const innerDim = inputShape[1];\n    this.outputShape = inputShape;\n    const exponentMultiplierSnippet = inverse ? `2.0 * ${Math.PI}` : `-2.0 * ${Math.PI}`;\n    const resultDenominator = inverse ? `${innerDim}.0` : '1.0';\n    this.userCode = `\n      const float exponentMultiplier = ${exponentMultiplierSnippet};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${op}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${innerDim});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${innerDim}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${resultDenominator};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `;\n  }\n\n}\n\nexports.FFTProgram = FFTProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/fft_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":7},"generated":{"line":24,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":24,"column":6}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":24,"column":17}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":24,"column":20}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":25,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":25,"column":2}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":25,"column":6}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":25,"column":8}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":25,"column":43}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":26,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":26,"column":2}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":26,"column":6}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":26,"column":8}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":27,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":20,"column":7},"generated":{"line":27,"column":1}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":30,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":30,"column":6}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":30,"column":16}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":30,"column":17}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":31,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":31,"column":2}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":31,"column":13}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":31,"column":14}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":31,"column":16}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":31,"column":18}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":31,"column":28}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":56},"generated":{"line":31,"column":30}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":31,"column":37}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":30,"column":72},"generated":{"line":31,"column":39}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":32,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":32,"column":9}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":32,"column":22}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":32,"column":25}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":19},"generated":{"line":32,"column":26}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":32,"column":32}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":32,"column":34}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":32,"column":40}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":32,"column":41}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":33,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":33,"column":10}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":33,"column":18}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":33,"column":21}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":31},"generated":{"line":33,"column":31}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":32},"generated":{"line":33,"column":32}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":31},"generated":{"line":33,"column":33}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":33,"column":34}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":34,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":34,"column":9}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":34,"column":20}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":32,"column":23},"generated":{"line":34,"column":23}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":34,"column":33}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":35,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":35,"column":10}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":34,"column":35},"generated":{"line":35,"column":35}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":35,"column":38}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":15},"generated":{"line":35,"column":45}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":18},"generated":{"line":35,"column":48}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":27},"generated":{"line":35,"column":57}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":31},"generated":{"line":35,"column":61}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":32},"generated":{"line":35,"column":62}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":34},"generated":{"line":35,"column":64}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":15},"generated":{"line":35,"column":66}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":39},"generated":{"line":35,"column":69}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":49},"generated":{"line":35,"column":79}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":53},"generated":{"line":35,"column":83}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":54},"generated":{"line":35,"column":84}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":35,"column":56},"generated":{"line":35,"column":86}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":35,"column":88}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":36,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":36,"column":10}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":27},"generated":{"line":36,"column":27}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":30},"generated":{"line":36,"column":30}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":37},"generated":{"line":36,"column":37}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":40},"generated":{"line":36,"column":40}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":43},"generated":{"line":36,"column":43}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":51},"generated":{"line":36,"column":51}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":37},"generated":{"line":36,"column":55}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":58},"generated":{"line":36,"column":58}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":36,"column":63}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":37,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":37,"column":9}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":37,"column":17}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":37,"column":20}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":39,"column":41},"generated":{"line":38,"column":41}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":39,"column":66},"generated":{"line":38,"column":66}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":41,"column":10}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":42,"column":12},"generated":{"line":41,"column":12}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":46,"column":50},"generated":{"line":45,"column":50}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":46,"column":58},"generated":{"line":45,"column":58}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":51,"column":30}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":52,"column":38},"generated":{"line":51,"column":38}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":61,"column":57},"generated":{"line":60,"column":57}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":61,"column":74},"generated":{"line":60,"column":74}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":70,"column":5}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":72,"column":3},"generated":{"line":71,"column":0}},{"source":"../src/fft_gpu.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":73,"column":0}}],"sources":{"../src/fft_gpu.ts":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport const COMPLEX_FFT = {\n  REAL: 'return real * expR - imag * expI;',\n  IMAG: 'return real * expI + imag * expR;'\n};\n\nexport class FFTProgram implements GPGPUProgram {\n  variableNames = ['real', 'imag'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(op: string, inputShape: [number, number], inverse: boolean) {\n    const innerDim = inputShape[1];\n    this.outputShape = inputShape;\n\n    const exponentMultiplierSnippet =\n        inverse ? `2.0 * ${Math.PI}` : `-2.0 * ${Math.PI}`;\n    const resultDenominator = inverse ? `${innerDim}.0` : '1.0';\n\n    this.userCode = `\n      const float exponentMultiplier = ${exponentMultiplierSnippet};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${op}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${innerDim});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${innerDim}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${resultDenominator};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"b81d39d080979e59e73c91c3b786833d","cacheData":{"env":{}}}
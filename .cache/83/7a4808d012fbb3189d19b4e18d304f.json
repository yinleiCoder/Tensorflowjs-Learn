{"id":"../node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\fused_util.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\fused_util.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldFuse = void 0;\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Whether we should call fused ops.\nconst shouldFuse = (gradientDepth, activation) => {\n  const gradientMode = gradientDepth > 0;\n  return !gradientMode || activation === 'linear';\n};\n\nexports.shouldFuse = shouldFuse;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":24,"column":0}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":7},"generated":{"line":25,"column":0}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":13},"generated":{"line":25,"column":6}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":25,"column":16}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":25,"column":19}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":27},"generated":{"line":25,"column":20}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":25,"column":33}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":50},"generated":{"line":25,"column":35}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":25,"column":45}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":76},"generated":{"line":25,"column":50}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":26,"column":0}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":26,"column":8}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":20},"generated":{"line":26,"column":20}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":23},"generated":{"line":26,"column":23}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":36},"generated":{"line":26,"column":36}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":39},"generated":{"line":26,"column":39}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":26,"column":40}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":27,"column":0}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":27,"column":9}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":27,"column":10}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":27,"column":22}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":26},"generated":{"line":27,"column":26}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":36},"generated":{"line":27,"column":36}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":41},"generated":{"line":27,"column":41}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":27,"column":49}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":28,"column":0}},{"source":"../../src/ops/fused_util.ts","name":null,"original":{"line":44,"column":7},"generated":{"line":28,"column":1}}],"sources":{"../../src/ops/fused_util.ts":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor3D, Tensor4D} from '../tensor';\n\nimport {Conv2DInfo} from './conv_util';\n\nexport type Activation = 'linear'|'relu'|'prelu'|'elu'|'relu6';\n\nexport type FusedBatchMatMulConfig = {\n  a: Tensor3D,\n  b: Tensor3D,\n  transposeA: boolean,\n  transposeB: boolean,\n  bias?: Tensor,\n  activation?: Activation,\n  preluActivationWeights?: Tensor\n};\n\nexport type FusedConv2DConfig = {\n  input: Tensor4D,\n  filter: Tensor4D,\n  convInfo: Conv2DInfo,\n  bias?: Tensor,\n  activation?: Activation,\n  preluActivationWeights?: Tensor\n};\n\n// Whether we should call fused ops.\nexport const shouldFuse = (gradientDepth: number, activation: Activation) => {\n  const gradientMode = gradientDepth > 0;\n  return !gradientMode || activation === 'linear';\n};\n"},"lineCount":null}},"error":null,"hash":"fd6c209fe4532e1f021ef3e00d80e7c4","cacheData":{"env":{}}}
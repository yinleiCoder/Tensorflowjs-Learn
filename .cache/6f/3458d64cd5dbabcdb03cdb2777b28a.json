{"id":"../node_modules/vega-lite/build/src/spec/toplevel.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\spec\\toplevel.js.map","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\src\\spec\\toplevel.ts","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\package.json","includedInParent":true,"mtime":1595569810471},{"name":"../channel","loc":{"line":1,"column":40},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\spec\\toplevel.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\channel.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFitType = isFitType;\nexports.getFitType = getFitType;\nexports.extractTopLevelProperties = extractTopLevelProperties;\n\nvar _channel = require(\"../channel\");\n\nfunction isFitType(autoSizeType) {\n  return autoSizeType === 'fit' || autoSizeType === 'fit-x' || autoSizeType === 'fit-y';\n}\n\nfunction getFitType(sizeType) {\n  return sizeType ? `fit-${(0, _channel.getPositionScaleChannel)(sizeType)}` : 'fit';\n}\n\nconst TOP_LEVEL_PROPERTIES = ['background', 'padding' // We do not include \"autosize\" here as it is supported by only unit and layer specs and thus need to be normalized\n];\n\nfunction extractTopLevelProperties(t) {\n  return TOP_LEVEL_PROPERTIES.reduce((o, p) => {\n    if (t && t[p] !== undefined) {\n      o[p] = t[p];\n    }\n\n    return o;\n  }, {});\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":68,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":12,"column":18}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":12,"column":19}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":12,"column":31}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":68,"column":52},"generated":{"line":12,"column":33}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":21},"generated":{"line":13,"column":21}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":26},"generated":{"line":13,"column":26}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":13,"column":31}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":35},"generated":{"line":13,"column":35}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":47},"generated":{"line":13,"column":47}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":52},"generated":{"line":13,"column":52}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":13,"column":59}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":63},"generated":{"line":13,"column":63}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":75},"generated":{"line":13,"column":75}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":80},"generated":{"line":13,"column":80}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":13,"column":87}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":14,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":16,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":16,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":16,"column":19}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":72,"column":27},"generated":{"line":16,"column":20}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":16,"column":28}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":72,"column":56},"generated":{"line":16,"column":30}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":17},"generated":{"line":17,"column":17}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":21},"generated":{"line":17,"column":20}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":28},"generated":{"line":17,"column":27}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":52},"generated":{"line":17,"column":65}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":28},"generated":{"line":17,"column":73}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":61},"generated":{"line":17,"column":74}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":17},"generated":{"line":17,"column":76}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":78},"generated":{"line":17,"column":79}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":84}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":74,"column":1},"generated":{"line":18,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":20,"column":6}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":26},"generated":{"line":20,"column":26}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":59},"generated":{"line":20,"column":29}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":102,"column":2},"generated":{"line":20,"column":30}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":59},"generated":{"line":20,"column":42}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":103,"column":2},"generated":{"line":20,"column":44}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":59},"generated":{"line":20,"column":53}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":104,"column":2},"generated":{"line":20,"column":54}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":59},"generated":{"line":21,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":101,"column":0},"generated":{"line":21,"column":1}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":23,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":107,"column":16},"generated":{"line":23,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":23,"column":34}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":107,"column":72},"generated":{"line":23,"column":35}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":23,"column":36}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":107,"column":76},"generated":{"line":23,"column":38}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":2},"generated":{"line":24,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":9},"generated":{"line":24,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":29},"generated":{"line":24,"column":29}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":30},"generated":{"line":24,"column":30}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":9},"generated":{"line":24,"column":36}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":37},"generated":{"line":24,"column":37}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":38},"generated":{"line":24,"column":38}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":37},"generated":{"line":24,"column":39}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":41},"generated":{"line":24,"column":41}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":37},"generated":{"line":24,"column":42}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":46},"generated":{"line":24,"column":47}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":25,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":8},"generated":{"line":25,"column":8}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":9},"generated":{"line":25,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":13},"generated":{"line":25,"column":13}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":14},"generated":{"line":25,"column":14}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":15},"generated":{"line":25,"column":15}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":14},"generated":{"line":25,"column":16}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":13},"generated":{"line":25,"column":17}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":22},"generated":{"line":25,"column":22}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":25,"column":31}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":109,"column":33},"generated":{"line":25,"column":33}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":26,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":26,"column":6}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":26,"column":7}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":8},"generated":{"line":26,"column":8}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":26,"column":9}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":26,"column":10}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":13},"generated":{"line":26,"column":13}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":14},"generated":{"line":26,"column":14}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":15},"generated":{"line":26,"column":15}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":14},"generated":{"line":26,"column":16}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":26,"column":17}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":111,"column":5},"generated":{"line":27,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":29,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":112,"column":11},"generated":{"line":29,"column":11}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":29,"column":12}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":113,"column":3},"generated":{"line":30,"column":0}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":9},"generated":{"line":30,"column":3}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":113,"column":5},"generated":{"line":30,"column":5}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":9},"generated":{"line":30,"column":7}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":108,"column":2},"generated":{"line":30,"column":8}},{"source":"../../../src/spec/toplevel.ts","name":null,"original":{"line":114,"column":1},"generated":{"line":31,"column":0}}],"sources":{"../../../src/spec/toplevel.ts":"import {Color, SignalRef} from 'vega';\nimport {BaseSpec} from '.';\nimport {getPositionScaleChannel} from '../channel';\nimport {Config} from '../config';\nimport {InlineDataset} from '../data';\nimport {Dict} from '../util';\n\n/**\n * @minimum 0\n */\nexport type Padding = number | {top?: number; bottom?: number; left?: number; right?: number};\n\nexport type Datasets = Dict<InlineDataset>;\n\nexport type TopLevel<S extends BaseSpec> = S &\n  TopLevelProperties & {\n    /**\n     * URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v4.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.\n     * @format uri\n     */\n    $schema?: string;\n\n    /**\n     * Vega-Lite configuration object. This property can only be defined at the top-level of a specification.\n     */\n    config?: Config;\n\n    /**\n     * A global data store for named datasets. This is a mapping from names to inline datasets.\n     * This can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property.\n     */\n    datasets?: Datasets;\n\n    /**\n     * Optional metadata that will be passed to Vega.\n     * This object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.\n     */\n    usermeta?: Dict<unknown>;\n  };\n\nexport interface TopLevelProperties {\n  /**\n   * CSS color property to use as the background of the entire view.\n   *\n   * __Default value:__ `\"white\"`\n   */\n  background?: Color | SignalRef;\n\n  /**\n   * The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle. If a number, specifies padding for all sides.\n   * If an object, the value should have the format `{\"left\": 5, \"top\": 5, \"right\": 5, \"bottom\": 5}` to specify padding for each side of the visualization.\n   *\n   * __Default value__: `5`\n   */\n  padding?: Padding | SignalRef;\n\n  /**\n   * How the visualization size should be determined. If a string, should be one of `\"pad\"`, `\"fit\"` or `\"none\"`.\n   * Object values can additionally specify parameters for content sizing and automatic resizing.\n   *\n   * __Default value__: `pad`\n   */\n  autosize?: AutosizeType | AutoSizeParams; // Vega actually supports signal for autosize. However, we need to check autosize at compile time to infer the rest of the spec. Thus VL's autosize won't support SignalRef for now.\n}\n\nexport type FitType = 'fit' | 'fit-x' | 'fit-y';\n\nexport function isFitType(autoSizeType: AutosizeType): autoSizeType is FitType {\n  return autoSizeType === 'fit' || autoSizeType === 'fit-x' || autoSizeType === 'fit-y';\n}\n\nexport function getFitType(sizeType?: 'width' | 'height'): FitType {\n  return sizeType ? (`fit-${getPositionScaleChannel(sizeType)}` as FitType) : 'fit';\n}\n\nexport type AutosizeType = 'pad' | 'none' | 'fit' | 'fit-x' | 'fit-y';\n\nexport interface AutoSizeParams {\n  /**\n   * The sizing format type. One of `\"pad\"`, `\"fit\"`, `\"fit-x\"`, `\"fit-y\"`,  or `\"none\"`. See the [autosize type](https://vega.github.io/vega-lite/docs/size.html#autosize) documentation for descriptions of each.\n   *\n   * __Default value__: `\"pad\"`\n   */\n  type?: AutosizeType;\n\n  /**\n   * A boolean flag indicating if autosize layout should be re-calculated on every view update.\n   *\n   * __Default value__: `false`\n   */\n  resize?: boolean;\n\n  /**\n   * Determines how size calculation should be performed, one of `\"content\"` or `\"padding\"`. The default setting (`\"content\"`) interprets the width and height settings as the data rectangle (plotting) dimensions, to which padding is then added. In contrast, the `\"padding\"` setting includes the padding within the view size calculations, such that the width and height settings indicate the **total** intended size of the view.\n   *\n   * __Default value__: `\"content\"`\n   */\n  contains?: 'content' | 'padding';\n}\n\nconst TOP_LEVEL_PROPERTIES: (keyof TopLevelProperties)[] = [\n  'background',\n  'padding'\n  // We do not include \"autosize\" here as it is supported by only unit and layer specs and thus need to be normalized\n];\n\nexport function extractTopLevelProperties<T extends TopLevelProperties>(t: T) {\n  return TOP_LEVEL_PROPERTIES.reduce((o, p) => {\n    if (t && t[p] !== undefined) {\n      o[p] = t[p];\n    }\n    return o;\n  }, {});\n}\n"},"lineCount":null}},"error":null,"hash":"ab18a1224b5e6a4d3f18b654161a7660","cacheData":{"env":{}}}
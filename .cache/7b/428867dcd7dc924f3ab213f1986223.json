{"id":"../node_modules/@tensorflow/tfjs-vis/dist/render/table.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\table.js.map","includedInParent":true,"mtime":1595569813578},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\package.json","includedInParent":true,"mtime":1595569813578},{"name":"d3-format","loc":{"line":19,"column":28},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\table.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\node_modules\\d3-format\\src\\index.js"},{"name":"d3-selection","loc":{"line":20,"column":31},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\table.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\d3-selection\\src\\index.js"},{"name":"glamor","loc":{"line":21,"column":25},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\table.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\glamor\\lib\\index.js"},{"name":"./render_utils","loc":{"line":22,"column":31},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\table.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\render_utils.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst d3_format_1 = require(\"d3-format\");\nconst d3_selection_1 = require(\"d3-selection\");\nconst glamor_1 = require(\"glamor\");\nconst render_utils_1 = require(\"./render_utils\");\n/**\n * Renders a table\n *\n * ```js\n * const headers = [\n *  'Col 1',\n *  'Col 2',\n *  'Col 3',\n * ];\n *\n * const values = [\n *  [1, 2, 3],\n *  ['4', '5', '6'],\n *  ['strong>7</strong>', true, false],\n * ];\n *\n * const surface = { name: 'Table', tab: 'Charts' };\n * tfvis.render.table(surface, { headers, values });\n * ```\n *\n * @param opts.fontSize fontSize in pixels for text in the chart.\n *\n */\n/** @doc {heading: 'Charts', namespace: 'render'} */\nfunction table(container, \n// tslint:disable-next-line:no-any\ndata, opts = {}) {\n    if (data && data.headers == null) {\n        throw new Error('Data to render must have a \"headers\" property');\n    }\n    if (data && data.values == null) {\n        throw new Error('Data to render must have a \"values\" property');\n    }\n    const drawArea = render_utils_1.getDrawArea(container);\n    const options = Object.assign({}, defaultOpts, opts);\n    let table = d3_selection_1.select(drawArea).select('table.tf-table');\n    const tableStyle = glamor_1.css({\n        fontSize: options.fontSize || '.875rem',\n        width: '100%',\n        maxWidth: '64rem',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n    });\n    // If a table is not already present on this element add one\n    if (table.size() === 0) {\n        table = d3_selection_1.select(drawArea).append('table');\n        table.attr('class', ` ${tableStyle} tf-table`);\n        table.append('thead').append('tr');\n        table.append('tbody');\n    }\n    if (table.size() !== 1) {\n        throw new Error('Error inserting table');\n    }\n    //\n    // Add the reader row\n    //\n    const headerRowStyle = glamor_1.css({\n        fontWeight: '600',\n        borderBottomStyle: 'solid',\n        borderBottomWidth: '1px',\n        borderColor: 'rgba( 0, 0, 0, .2 )',\n        textAlign: 'left',\n        paddingBottom: '1rem',\n        paddingRight: '1rem',\n        backgroundColor: '#fff',\n    });\n    const headers = table.select('thead').select('tr').selectAll('th').data(data.headers);\n    const headersEnter = headers.enter().append('th').attr('class', `${headerRowStyle}`);\n    headers.merge(headersEnter).html(d => d);\n    headers.exit().remove();\n    //\n    // Add the data rows\n    //\n    const format = d3_format_1.format(',.4~f');\n    const rows = table.select('tbody').selectAll('tr').data(data.values);\n    const rowsEnter = rows.enter().append('tr');\n    // Nested selection to add individual cells\n    const cellStyle = glamor_1.css({\n        padding: '0.25rem',\n        borderBottomStyle: 'solid',\n        borderBottomWidth: '1px',\n        borderColor: 'rgba( 0, 0, 0, .2 )',\n    });\n    const cells = rows.merge(rowsEnter).selectAll('td').data(d => d);\n    const cellsEnter = cells.enter().append('td').attr('class', `${cellStyle}`);\n    cells.merge(cellsEnter).html(d => typeof d === 'number' ? format(d) : d);\n    cells.exit().remove();\n    rows.exit().remove();\n}\nexports.table = table;\nconst defaultOpts = {\n    fontSize: 14,\n};\n"},"sourceMaps":{"js":{"version":3,"file":"table.js","sourceRoot":"","sources":["../../src/render/table.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,yCAA6C;AAC7C,+CAAgD;AAChD,mCAA2B;AAE3B,iDAA2C;AAE3C;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,oDAAoD;AACpD,SAAgB,KAAK,CACjB,SAAmB;AACnB,kCAAkC;AAClC,IAAe,EAAE,OAA4B,EAAE;IACjD,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;QAChC,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAClE;IAED,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;KACjE;IAED,MAAM,QAAQ,GAAG,0BAAW,CAAC,SAAS,CAAC,CAAC;IAExC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAErD,IAAI,KAAK,GAAG,qBAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAExD,MAAM,UAAU,GAAG,YAAG,CAAC;QACrB,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,SAAS;QACvC,KAAK,EAAE,MAAM;QACb,QAAQ,EAAE,OAAO;QACjB,WAAW,EAAE,MAAM;QACnB,UAAU,EAAE,MAAM;KACnB,CAAC,CAAC;IAEH,4DAA4D;IAC5D,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;QACtB,KAAK,GAAG,qBAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE3C,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,UAAU,WAAW,CAAC,CAAC;QAE/C,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACvB;IAED,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;QACtB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KAC1C;IAED,EAAE;IACF,qBAAqB;IACrB,EAAE;IACF,MAAM,cAAc,GAAG,YAAG,CAAC;QACzB,UAAU,EAAE,KAAK;QACjB,iBAAiB,EAAE,OAAO;QAC1B,iBAAiB,EAAE,KAAK;QACxB,WAAW,EAAE,qBAAqB;QAClC,SAAS,EAAE,MAAM;QACjB,aAAa,EAAE,MAAM;QACrB,YAAY,EAAE,MAAM;QACpB,eAAe,EAAE,MAAM;KACxB,CAAC,CAAC;IACH,MAAM,OAAO,GACT,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1E,MAAM,YAAY,GACd,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,cAAc,EAAE,CAAC,CAAC;IACpE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEzC,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAExB,EAAE;IACF,oBAAoB;IACpB,EAAE;IACF,MAAM,MAAM,GAAG,kBAAQ,CAAC,OAAO,CAAC,CAAC;IAEjC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAE5C,2CAA2C;IAC3C,MAAM,SAAS,GAAG,YAAG,CAAC;QACpB,OAAO,EAAE,SAAS;QAClB,iBAAiB,EAAE,OAAO;QAC1B,iBAAiB,EAAE,KAAK;QACxB,WAAW,EAAE,qBAAqB;KACnC,CAAC,CAAC;IACH,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,SAAS,EAAE,CAAC,CAAC;IAC5E,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEzE,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IACtB,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;AACvB,CAAC;AAlFD,sBAkFC;AAED,MAAM,WAAW,GAAG;IAClB,QAAQ,EAAE,EAAE;CACb,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {format as d3Format} from 'd3-format';\nimport {select as d3Select} from 'd3-selection';\nimport {css} from 'glamor';\nimport {Drawable, TableData} from '../types';\nimport {getDrawArea} from './render_utils';\n\n/**\n * Renders a table\n *\n * ```js\n * const headers = [\n *  'Col 1',\n *  'Col 2',\n *  'Col 3',\n * ];\n *\n * const values = [\n *  [1, 2, 3],\n *  ['4', '5', '6'],\n *  ['strong>7</strong>', true, false],\n * ];\n *\n * const surface = { name: 'Table', tab: 'Charts' };\n * tfvis.render.table(surface, { headers, values });\n * ```\n *\n * @param opts.fontSize fontSize in pixels for text in the chart.\n *\n */\n/** @doc {heading: 'Charts', namespace: 'render'} */\nexport function table(\n    container: Drawable,\n    // tslint:disable-next-line:no-any\n    data: TableData, opts: {fontSize?: number} = {}) {\n  if (data && data.headers == null) {\n    throw new Error('Data to render must have a \"headers\" property');\n  }\n\n  if (data && data.values == null) {\n    throw new Error('Data to render must have a \"values\" property');\n  }\n\n  const drawArea = getDrawArea(container);\n\n  const options = Object.assign({}, defaultOpts, opts);\n\n  let table = d3Select(drawArea).select('table.tf-table');\n\n  const tableStyle = css({\n    fontSize: options.fontSize || '.875rem',\n    width: '100%',\n    maxWidth: '64rem',\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  });\n\n  // If a table is not already present on this element add one\n  if (table.size() === 0) {\n    table = d3Select(drawArea).append('table');\n\n    table.attr('class', ` ${tableStyle} tf-table`);\n\n    table.append('thead').append('tr');\n    table.append('tbody');\n  }\n\n  if (table.size() !== 1) {\n    throw new Error('Error inserting table');\n  }\n\n  //\n  // Add the reader row\n  //\n  const headerRowStyle = css({\n    fontWeight: '600',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px',\n    borderColor: 'rgba( 0, 0, 0, .2 )',\n    textAlign: 'left',\n    paddingBottom: '1rem',\n    paddingRight: '1rem',\n    backgroundColor: '#fff',\n  });\n  const headers =\n      table.select('thead').select('tr').selectAll('th').data(data.headers);\n  const headersEnter =\n      headers.enter().append('th').attr('class', `${headerRowStyle}`);\n  headers.merge(headersEnter).html(d => d);\n\n  headers.exit().remove();\n\n  //\n  // Add the data rows\n  //\n  const format = d3Format(',.4~f');\n\n  const rows = table.select('tbody').selectAll('tr').data(data.values);\n  const rowsEnter = rows.enter().append('tr');\n\n  // Nested selection to add individual cells\n  const cellStyle = css({\n    padding: '0.25rem',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px',\n    borderColor: 'rgba( 0, 0, 0, .2 )',\n  });\n  const cells = rows.merge(rowsEnter).selectAll('td').data(d => d);\n  const cellsEnter = cells.enter().append('td').attr('class', `${cellStyle}`);\n  cells.merge(cellsEnter).html(d => typeof d === 'number' ? format(d) : d);\n\n  cells.exit().remove();\n  rows.exit().remove();\n}\n\nconst defaultOpts = {\n  fontSize: 14,\n};\n"]}},"error":null,"hash":"9bbd5e0eaa2f01ec120d8c0e3f922fcf","cacheData":{"env":{}}}
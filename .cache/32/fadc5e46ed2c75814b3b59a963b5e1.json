{"id":"../node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat_1d.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\concat_1d.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399},{"name":"./concat","loc":{"line":1,"column":23},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat_1d.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat.js"},{"name":"./operation","loc":{"line":2,"column":19},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat_1d.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concat1d = void 0;\n\nvar _concat = require(\"./concat\");\n\nvar _operation = require(\"./operation\");\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n  return (0, _concat.concat)(tensors, 0\n  /* axis */\n  );\n}\n\nconst concat1d = (0, _operation.op)({\n  concat1d_\n});\nexports.concat1d = concat1d;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":23,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":23,"column":9}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":23,"column":18}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":34,"column":19},"generated":{"line":23,"column":19}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":23,"column":26}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":34,"column":54},"generated":{"line":23,"column":28}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":24,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":24,"column":9}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":24,"column":29}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":24,"column":36}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":24,"column":38}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":27},"generated":{"line":25,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":26,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":26,"column":3}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":27,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":7},"generated":{"line":29,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":29,"column":6}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":21},"generated":{"line":29,"column":14}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":24},"generated":{"line":29,"column":17}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":29,"column":36}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":30,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":30,"column":2}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":31,"column":0}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":24},"generated":{"line":31,"column":1}},{"source":"../../src/ops/concat_1d.ts","name":null,"original":{"line":38,"column":7},"generated":{"line":31,"column":2}}],"sources":{"../../src/ops/concat_1d.ts":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors: Array<Tensor1D|TensorLike>): Tensor1D {\n  return concat(tensors, 0 /* axis */);\n}\n\nexport const concat1d = op({concat1d_});\n"},"lineCount":null}},"error":null,"hash":"c46fc53af8c2f2db90f954e70861ffd6","cacheData":{"env":{}}}
{"id":"../node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-converter\\dist\\executor\\tensor_utils.js.map","includedInParent":true,"mtime":1595498163424},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-converter\\src\\executor\\tensor_utils.ts","includedInParent":true,"mtime":1595498163424},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-converter\\package.json","includedInParent":true,"mtime":1595498163424},{"name":"@tensorflow/tfjs-core","loc":{"line":22,"column":21},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-converter\\dist\\executor\\tensor_utils.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertShapesMatchAllowUndefinedSize = assertShapesMatchAllowUndefinedSize;\nexports.shapesEqualAllowUndefinedSize = shapesEqualAllowUndefinedSize;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\nfunction assertShapesMatchAllowUndefinedSize(shapeA, shapeB, errorMessagePrefix = '') {\n  _tfjsCore.util.assert(shapesEqualAllowUndefinedSize(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\n\nfunction shapesEqualAllowUndefinedSize(n1, n2) {\n  if (n1.length !== n2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":28,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":33,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":33,"column":9}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":33,"column":44}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":33,"column":45}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":33,"column":51}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":27,"column":22},"generated":{"line":33,"column":53}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":33,"column":59}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":27,"column":40},"generated":{"line":33,"column":61}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":27,"column":58},"generated":{"line":33,"column":79}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":27,"column":61},"generated":{"line":33,"column":82}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":33,"column":84}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":27,"column":63},"generated":{"line":33,"column":86}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":34,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":28,"column":7},"generated":{"line":34,"column":17}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":34,"column":23}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":34,"column":24}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":29,"column":35},"generated":{"line":34,"column":53}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":29,"column":36},"generated":{"line":34,"column":54}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":29,"column":35},"generated":{"line":34,"column":60}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":29,"column":44},"generated":{"line":34,"column":62}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":29,"column":35},"generated":{"line":34,"column":68}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":34,"column":69}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":34,"column":71}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":34,"column":77}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":34,"column":95}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":33},"generated":{"line":34,"column":98}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":44},"generated":{"line":34,"column":109}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":50},"generated":{"line":34,"column":115}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":58},"generated":{"line":34,"column":123}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":30,"column":64},"generated":{"line":34,"column":129}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":34,"column":142}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":31,"column":1},"generated":{"line":35,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":37,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":37,"column":9}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":37,"column":38}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":46},"generated":{"line":37,"column":39}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":37,"column":41}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":60},"generated":{"line":37,"column":43}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":37,"column":45}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":33,"column":72},"generated":{"line":37,"column":47}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":38,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":38,"column":6}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":38,"column":8}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":38,"column":9}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":38,"column":15}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":20},"generated":{"line":38,"column":20}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":22},"generated":{"line":38,"column":22}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":23},"generated":{"line":38,"column":23}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":38,"column":29}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":34,"column":31},"generated":{"line":38,"column":31}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":39,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":35,"column":11},"generated":{"line":39,"column":11}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":39,"column":16}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":36,"column":3},"generated":{"line":40,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":42,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":7},"generated":{"line":42,"column":7}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":42,"column":11}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":12},"generated":{"line":42,"column":12}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":42,"column":15}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":42,"column":16}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":18},"generated":{"line":42,"column":18}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":19},"generated":{"line":42,"column":19}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":22},"generated":{"line":42,"column":22}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":24},"generated":{"line":42,"column":24}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":25},"generated":{"line":42,"column":25}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":42,"column":31}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":33},"generated":{"line":42,"column":33}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":34},"generated":{"line":42,"column":34}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":42,"column":36}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":37,"column":38},"generated":{"line":42,"column":38}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":43,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":43,"column":8}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":43,"column":10}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":11},"generated":{"line":43,"column":11}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":43,"column":12}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":43,"column":13}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":18},"generated":{"line":43,"column":18}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":43,"column":19}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":43,"column":20}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":24},"generated":{"line":43,"column":24}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":43,"column":26}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":43,"column":27}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":43,"column":28}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":24},"generated":{"line":43,"column":29}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":34},"generated":{"line":43,"column":34}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":35},"generated":{"line":43,"column":35}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":43,"column":36}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":40},"generated":{"line":43,"column":40}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":42},"generated":{"line":43,"column":42}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":43},"generated":{"line":43,"column":43}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":42},"generated":{"line":43,"column":44}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":40},"generated":{"line":43,"column":45}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":50},"generated":{"line":43,"column":50}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":52},"generated":{"line":43,"column":52}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":53},"generated":{"line":43,"column":53}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":52},"generated":{"line":43,"column":54}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":43,"column":55}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":38,"column":57},"generated":{"line":43,"column":57}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":44,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":44,"column":13}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":44,"column":18}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":45,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":41,"column":3},"generated":{"line":46,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":48,"column":0}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":48,"column":9}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":48,"column":13}},{"source":"../../src/executor/tensor_utils.ts","name":null,"original":{"line":43,"column":1},"generated":{"line":49,"column":0}}],"sources":{"../../src/executor/tensor_utils.ts":"\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\nexport function assertShapesMatchAllowUndefinedSize(\n    shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n  util.assert(\n      shapesEqualAllowUndefinedSize(shapeA, shapeB),\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\n\nexport function shapesEqualAllowUndefinedSize(n1: number[], n2: number[]) {\n  if (n1.length !== n2.length) {\n    return false;\n  }\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n"},"lineCount":null}},"error":null,"hash":"26f377201fb6b8e907c71ccd157d30ba","cacheData":{"env":{}}}
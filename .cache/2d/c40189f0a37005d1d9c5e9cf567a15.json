{"id":"../node_modules/@tensorflow/tfjs-core/dist/serialization.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\serialization.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\serialization.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399},{"name":"./util","loc":{"line":17,"column":23},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\serialization.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerClass = registerClass;\nexports.SerializationMap = exports.Serializable = void 0;\n\nvar _util = require(\"./util\");\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nclass Serializable {\n  /**\n   * Return the class name for this class to use in serialization contexts.\n   *\n   * Generally speaking this will be the same thing that constructor.name\n   * would have returned.  However, the class name needs to be robust\n   * against minification for serialization/deserialization to work properly.\n   *\n   * There's also places such as initializers.VarianceScaling, where\n   * implementation details between different languages led to different\n   * class hierarchies and a non-leaf node is used for serialization purposes.\n   */\n  getClassName() {\n    return this.constructor.className;\n  }\n  /**\n   * Creates an instance of T from a ConfigDict.\n   *\n   * This works for most descendants of serializable.  A few need to\n   * provide special handling.\n   * @param cls A Constructor for the class to instantiate.\n   * @param config The Configuration for the object.\n   */\n\n  /** @nocollapse */\n\n\n  static fromConfig(cls, config) {\n    return new cls(config);\n  }\n\n}\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\n\n\nexports.Serializable = Serializable;\n\nclass SerializationMap {\n  constructor() {\n    this.classNameMap = {};\n  }\n  /**\n   * Returns the singleton instance of the map.\n   */\n\n\n  static getMap() {\n    if (SerializationMap.instance == null) {\n      SerializationMap.instance = new SerializationMap();\n    }\n\n    return SerializationMap.instance;\n  }\n  /**\n   * Registers the class as serializable.\n   */\n\n\n  static register(cls) {\n    SerializationMap.getMap().classNameMap[cls.className] = [cls, cls.fromConfig];\n  }\n\n}\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n */\n\n/** @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true} */\n\n\nexports.SerializationMap = SerializationMap;\n\nfunction registerClass(cls) {\n  (0, _util.assert)(cls.className != null, () => `Class being registered does not have the static className ` + `property defined.`);\n  (0, _util.assert)(typeof cls.className === 'string', () => `className is required to be a string, but got type ` + typeof cls.className);\n  (0, _util.assert)(cls.className.length > 0, () => `Class being registered has an empty-string as its className, ` + `which is disallowed.`);\n  SerializationMap.register(cls);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/serialization.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":28,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":34,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":22},"generated":{"line":34,"column":6}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":34,"column":18}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":34,"column":19}},{"source":"../src/serialization.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":35,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":46,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":46,"column":2}},{"source":"../src/serialization.ts","name":null,"original":{"line":75,"column":14},"generated":{"line":46,"column":14}},{"source":"../src/serialization.ts","name":null,"original":{"line":75,"column":14},"generated":{"line":46,"column":17}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":47,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":12},"generated":{"line":47,"column":11}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":47,"column":16}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":12},"generated":{"line":47,"column":27}},{"source":"../src/serialization.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":47,"column":28}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":47,"column":37}},{"source":"../src/serialization.ts","name":null,"original":{"line":78,"column":3},"generated":{"line":48,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":49,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":58,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":61,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":61,"column":9}},{"source":"../src/serialization.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":61,"column":19}},{"source":"../src/serialization.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":61,"column":20}},{"source":"../src/serialization.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":61,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":95,"column":39},"generated":{"line":61,"column":25}},{"source":"../src/serialization.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":61,"column":31}},{"source":"../src/serialization.ts","name":null,"original":{"line":95,"column":57},"generated":{"line":61,"column":33}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":62,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":11},"generated":{"line":62,"column":11}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":15},"generated":{"line":62,"column":15}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":11},"generated":{"line":62,"column":18}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":19},"generated":{"line":62,"column":19}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":11},"generated":{"line":62,"column":25}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":62,"column":26}},{"source":"../src/serialization.ts","name":null,"original":{"line":97,"column":3},"generated":{"line":63,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":65,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":100,"column":0},"generated":{"line":66,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":77,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":13},"generated":{"line":77,"column":6}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":77,"column":22}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":29},"generated":{"line":77,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":78,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":78,"column":2}},{"source":"../src/serialization.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":78,"column":13}},{"source":"../src/serialization.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":78,"column":16}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":79,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":9},"generated":{"line":79,"column":9}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":79,"column":21}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":79,"column":24}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":79,"column":26}},{"source":"../src/serialization.ts","name":null,"original":{"line":116,"column":3},"generated":{"line":80,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":118,"column":2},"generated":{"line":81,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":121,"column":2},"generated":{"line":86,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":121,"column":9},"generated":{"line":86,"column":9}},{"source":"../src/serialization.ts","name":null,"original":{"line":121,"column":2},"generated":{"line":86,"column":15}},{"source":"../src/serialization.ts","name":null,"original":{"line":121,"column":15},"generated":{"line":86,"column":18}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":87,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":87,"column":8}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":24},"generated":{"line":87,"column":24}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":25},"generated":{"line":87,"column":25}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":87,"column":33}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":37},"generated":{"line":87,"column":37}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":87,"column":41}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":43},"generated":{"line":87,"column":43}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":88,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":88,"column":6}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":22},"generated":{"line":88,"column":22}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":23},"generated":{"line":88,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":88,"column":31}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":34},"generated":{"line":88,"column":34}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":38},"generated":{"line":88,"column":38}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":34},"generated":{"line":88,"column":54}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":88,"column":56}},{"source":"../src/serialization.ts","name":null,"original":{"line":124,"column":5},"generated":{"line":89,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":4},"generated":{"line":91,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":11},"generated":{"line":91,"column":11}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":27},"generated":{"line":91,"column":27}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":28},"generated":{"line":91,"column":28}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":4},"generated":{"line":91,"column":36}},{"source":"../src/serialization.ts","name":null,"original":{"line":126,"column":3},"generated":{"line":92,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":128,"column":2},"generated":{"line":93,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":98,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":9},"generated":{"line":98,"column":9}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":98,"column":17}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":42},"generated":{"line":98,"column":18}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":98,"column":21}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":73},"generated":{"line":98,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":99,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":99,"column":4}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":20},"generated":{"line":99,"column":20}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":21},"generated":{"line":99,"column":21}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":99,"column":27}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":30},"generated":{"line":99,"column":30}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":99,"column":42}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":43},"generated":{"line":99,"column":43}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":46},"generated":{"line":99,"column":46}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":47},"generated":{"line":99,"column":47}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":99,"column":56}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":8},"generated":{"line":99,"column":60}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":9},"generated":{"line":99,"column":61}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":8},"generated":{"line":99,"column":64}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":14},"generated":{"line":99,"column":66}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":17},"generated":{"line":99,"column":69}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":18},"generated":{"line":99,"column":70}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":8},"generated":{"line":99,"column":80}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":99,"column":81}},{"source":"../src/serialization.ts","name":null,"original":{"line":134,"column":3},"generated":{"line":100,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":29},"generated":{"line":102,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":103,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":159,"column":0},"generated":{"line":126,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":160,"column":6},"generated":{"line":131,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":160,"column":16},"generated":{"line":131,"column":9}},{"source":"../src/serialization.ts","name":null,"original":{"line":160,"column":6},"generated":{"line":131,"column":22}},{"source":"../src/serialization.ts","name":null,"original":{"line":161,"column":4},"generated":{"line":131,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":160,"column":6},"generated":{"line":131,"column":26}},{"source":"../src/serialization.ts","name":null,"original":{"line":161,"column":35},"generated":{"line":131,"column":28}},{"source":"../src/serialization.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":132,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":163,"column":6},"generated":{"line":132,"column":20}},{"source":"../src/serialization.ts","name":null,"original":{"line":163,"column":9},"generated":{"line":132,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":163,"column":10},"generated":{"line":132,"column":24}},{"source":"../src/serialization.ts","name":null,"original":{"line":163,"column":6},"generated":{"line":132,"column":33}},{"source":"../src/serialization.ts","name":null,"original":{"line":163,"column":23},"generated":{"line":132,"column":37}},{"source":"../src/serialization.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":132,"column":41}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":6},"generated":{"line":132,"column":43}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":12},"generated":{"line":132,"column":49}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":12},"generated":{"line":132,"column":109}},{"source":"../src/serialization.ts","name":null,"original":{"line":165,"column":10},"generated":{"line":132,"column":112}},{"source":"../src/serialization.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":132,"column":131}},{"source":"../src/serialization.ts","name":null,"original":{"line":166,"column":2},"generated":{"line":133,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":167,"column":6},"generated":{"line":133,"column":20}},{"source":"../src/serialization.ts","name":null,"original":{"line":167,"column":13},"generated":{"line":133,"column":27}},{"source":"../src/serialization.ts","name":null,"original":{"line":167,"column":16},"generated":{"line":133,"column":30}},{"source":"../src/serialization.ts","name":null,"original":{"line":167,"column":17},"generated":{"line":133,"column":31}},{"source":"../src/serialization.ts","name":null,"original":{"line":167,"column":6},"generated":{"line":133,"column":40}},{"source":"../src/serialization.ts","name":null,"original":{"line":167,"column":31},"generated":{"line":133,"column":45}},{"source":"../src/serialization.ts","name":null,"original":{"line":166,"column":2},"generated":{"line":133,"column":53}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":6},"generated":{"line":133,"column":55}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":12},"generated":{"line":133,"column":61}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":12},"generated":{"line":133,"column":114}},{"source":"../src/serialization.ts","name":null,"original":{"line":169,"column":10},"generated":{"line":133,"column":117}},{"source":"../src/serialization.ts","name":null,"original":{"line":169,"column":17},"generated":{"line":133,"column":124}},{"source":"../src/serialization.ts","name":null,"original":{"line":169,"column":20},"generated":{"line":133,"column":127}},{"source":"../src/serialization.ts","name":null,"original":{"line":169,"column":21},"generated":{"line":133,"column":128}},{"source":"../src/serialization.ts","name":null,"original":{"line":166,"column":2},"generated":{"line":133,"column":137}},{"source":"../src/serialization.ts","name":null,"original":{"line":170,"column":2},"generated":{"line":134,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":6},"generated":{"line":134,"column":20}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":9},"generated":{"line":134,"column":23}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":10},"generated":{"line":134,"column":24}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":6},"generated":{"line":134,"column":33}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":20},"generated":{"line":134,"column":34}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":6},"generated":{"line":134,"column":40}},{"source":"../src/serialization.ts","name":null,"original":{"line":171,"column":29},"generated":{"line":134,"column":43}},{"source":"../src/serialization.ts","name":null,"original":{"line":170,"column":2},"generated":{"line":134,"column":44}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":6},"generated":{"line":134,"column":46}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":12},"generated":{"line":134,"column":52}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":12},"generated":{"line":134,"column":115}},{"source":"../src/serialization.ts","name":null,"original":{"line":173,"column":10},"generated":{"line":134,"column":118}},{"source":"../src/serialization.ts","name":null,"original":{"line":170,"column":2},"generated":{"line":134,"column":140}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":2},"generated":{"line":135,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":2},"generated":{"line":135,"column":2}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":18},"generated":{"line":135,"column":18}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":19},"generated":{"line":135,"column":19}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":2},"generated":{"line":135,"column":27}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":28},"generated":{"line":135,"column":28}},{"source":"../src/serialization.ts","name":null,"original":{"line":175,"column":2},"generated":{"line":135,"column":31}},{"source":"../src/serialization.ts","name":null,"original":{"line":176,"column":1},"generated":{"line":136,"column":0}}],"sources":{"../src/serialization.ts":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from './util';\n\n/**\n * Types to support JSON-esque data structures internally.\n *\n * Internally ConfigDict's use camelCase keys and values where the\n * values are class names to be instantiated.  On the python side, these\n * will be snake_case.  Internally we allow Enums into the values for better\n * type safety, but these need to be converted to raw primitives (usually\n * strings) for round-tripping with python.\n *\n * toConfig returns the TS-friendly representation. model.toJSON() returns\n * the pythonic version as that's the portable format.  If you need to\n * python-ify a non-model level toConfig output, you'll need to use a\n * convertTsToPythonic from serialization_utils in -Layers.\n *\n */\nexport declare type ConfigDictValue =\n    boolean | number | string | null | ConfigDictArray | ConfigDict;\nexport declare interface ConfigDict {\n  [key: string]: ConfigDictValue;\n}\nexport declare interface ConfigDictArray extends Array<ConfigDictValue> {}\n\n/**\n * Type to represent the class-type of Serializable objects.\n *\n * Ie the class prototype with access to the constructor and any\n * static members/methods. Instance methods are not listed here.\n *\n * Source for this idea: https://stackoverflow.com/a/43607255\n */\nexport declare type SerializableConstructor<T extends Serializable> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T; className: string; fromConfig: FromConfigMethod<T>;\n};\nexport declare type FromConfigMethod<T extends Serializable> =\n    (cls: SerializableConstructor<T>, config: ConfigDict) => T;\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport abstract class Serializable {\n  /**\n   * Return the class name for this class to use in serialization contexts.\n   *\n   * Generally speaking this will be the same thing that constructor.name\n   * would have returned.  However, the class name needs to be robust\n   * against minification for serialization/deserialization to work properly.\n   *\n   * There's also places such as initializers.VarianceScaling, where\n   * implementation details between different languages led to different\n   * class hierarchies and a non-leaf node is used for serialization purposes.\n   */\n  getClassName(): string {\n    return (this.constructor as SerializableConstructor<Serializable>)\n        .className;\n  }\n\n  /**\n   * Return all the non-weight state needed to serialize this object.\n   */\n  abstract getConfig(): ConfigDict;\n\n  /**\n   * Creates an instance of T from a ConfigDict.\n   *\n   * This works for most descendants of serializable.  A few need to\n   * provide special handling.\n   * @param cls A Constructor for the class to instantiate.\n   * @param config The Configuration for the object.\n   */\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config);\n  }\n}\n\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n  private static instance: SerializationMap;\n  classNameMap: {\n    [className: string]:\n        [SerializableConstructor<Serializable>, FromConfigMethod<Serializable>]\n  };\n\n  private constructor() {\n    this.classNameMap = {};\n  }\n\n  /**\n   * Returns the singleton instance of the map.\n   */\n  static getMap(): SerializationMap {\n    if (SerializationMap.instance == null) {\n      SerializationMap.instance = new SerializationMap();\n    }\n    return SerializationMap.instance;\n  }\n\n  /**\n   * Registers the class as serializable.\n   */\n  static register<T extends Serializable>(cls: SerializableConstructor<T>) {\n    SerializationMap.getMap().classNameMap[cls.className] =\n        [cls, cls.fromConfig];\n  }\n}\n\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n */\n/** @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true} */\nexport function registerClass<T extends Serializable>(\n    cls: SerializableConstructor<T>) {\n  assert(\n      cls.className != null,\n      () => `Class being registered does not have the static className ` +\n          `property defined.`);\n  assert(\n      typeof cls.className === 'string',\n      () => `className is required to be a string, but got type ` +\n          typeof cls.className);\n  assert(\n      cls.className.length > 0,\n      () => `Class being registered has an empty-string as its className, ` +\n          `which is disallowed.`);\n\n  SerializationMap.register(cls);\n}\n"},"lineCount":null}},"error":null,"hash":"a5de28f8d370faabd265da4437e85120","cacheData":{"env":{}}}
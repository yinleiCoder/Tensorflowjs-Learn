{"id":"../node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv3d_transpose.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\conv3d_transpose.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399},{"name":"../tensor_util_env","loc":{"line":1,"column":32},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv3d_transpose.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"./conv3d_backprop_input","loc":{"line":2,"column":36},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv3d_transpose.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv3d_backprop_input.js"},{"name":"./operation","loc":{"line":3,"column":19},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\conv3d_transpose.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.conv3dTranspose = void 0;\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _conv3d_backprop_input = require(\"./conv3d_backprop_input\");\n\nvar _operation = require(\"./operation\");\n\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n */\n\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n  const $x = (0, _tensor_util_env.convertToTensor)(x, 'x', 'conv3dTranspose');\n  const $filter = (0, _tensor_util_env.convertToTensor)(filter, 'filter', 'conv3dTranspose');\n  return (0, _conv3d_backprop_input.conv3DBackpropInput)(outputShape, $x, $filter, strides, pad);\n}\n\nconst conv3dTranspose = (0, _operation.op)({\n  conv3dTranspose_\n});\nexports.conv3dTranspose = conv3dTranspose;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":32,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":33,"column":9}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":25}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":33,"column":26}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":27}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":33,"column":29}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":35}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":33,"column":37}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":48}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":33,"column":50}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":57}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":33,"column":59}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":33,"column":62}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":47,"column":65},"generated":{"line":33,"column":64}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":34,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":34,"column":8}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":10},"generated":{"line":34,"column":10}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":34,"column":13}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":29},"generated":{"line":34,"column":51}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":34,"column":52}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":32},"generated":{"line":34,"column":54}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":34,"column":57}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":37},"generated":{"line":34,"column":59}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":34,"column":76}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":34,"column":77}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":35,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":35,"column":8}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":15},"generated":{"line":35,"column":15}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":35,"column":18}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":34},"generated":{"line":35,"column":56}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":35,"column":62}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":42},"generated":{"line":35,"column":64}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":35,"column":72}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":52},"generated":{"line":35,"column":74}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":35,"column":91}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":35,"column":92}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":36,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":36,"column":9}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":29},"generated":{"line":36,"column":57}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":36,"column":68}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":42},"generated":{"line":36,"column":70}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":36,"column":72}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":46},"generated":{"line":36,"column":74}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":36,"column":81}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":55},"generated":{"line":36,"column":83}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":36,"column":90}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":64},"generated":{"line":36,"column":92}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":36,"column":95}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":36,"column":96}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":52,"column":1},"generated":{"line":37,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":39,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":13},"generated":{"line":39,"column":6}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":28},"generated":{"line":39,"column":21}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":31},"generated":{"line":39,"column":24}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":34},"generated":{"line":39,"column":43}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":35},"generated":{"line":40,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":35},"generated":{"line":40,"column":2}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":34},"generated":{"line":41,"column":0}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":31},"generated":{"line":41,"column":1}},{"source":"../../src/ops/conv3d_transpose.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":41,"column":2}}],"sources":{"../../src/ops/conv3d_transpose.ts":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {conv3DBackpropInput} from './conv3d_backprop_input';\nimport {op} from './operation';\n\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv3dTranspose_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filter: Tensor5D|TensorLike,\n    outputShape:\n        [number, number, number, number,\n         number]|[number, number, number, number],\n    strides: [number, number, number]|number, pad: 'valid'|'same'): T {\n  const $x = convertToTensor(x, 'x', 'conv3dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv3dTranspose');\n\n  return conv3DBackpropInput(outputShape, $x, $filter, strides, pad);\n}\n\nexport const conv3dTranspose = op({conv3dTranspose_});\n"},"lineCount":null}},"error":null,"hash":"f92c58c5832bec6b166ae9094c37bc91","cacheData":{"env":{}}}
{"id":"../node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\conditional.js.map","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\src\\compile\\mark\\encode\\conditional.ts","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\package.json","includedInParent":true,"mtime":1595569810471},{"name":"vega-util","loc":{"line":1,"column":22},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\conditional.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-util\\index.js"},{"name":"../../../channeldef","loc":{"line":2,"column":57},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\conditional.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\channeldef.js"},{"name":"../../predicate","loc":{"line":3,"column":27},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\conditional.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\predicate.js"},{"name":"../../selection/parse","loc":{"line":4,"column":40},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\conditional.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\selection\\parse.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapCondition = wrapCondition;\n\nvar _vegaUtil = require(\"vega-util\");\n\nvar _channeldef = require(\"../../../channeldef\");\n\nvar _predicate = require(\"../../predicate\");\n\nvar _parse = require(\"../../selection/parse\");\n\n/**\n * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition\n * or a simple mixin if channel def has no condition.\n */\nfunction wrapCondition(model, channelDef, vgChannel, refFn) {\n  const condition = (0, _channeldef.isConditionalDef)(channelDef) && channelDef.condition;\n  const valueRef = refFn(channelDef);\n\n  if (condition) {\n    const conditions = (0, _vegaUtil.array)(condition);\n    const vgConditions = conditions.map(c => {\n      const conditionValueRef = refFn(c);\n      const test = (0, _channeldef.isConditionalSelection)(c) ? (0, _parse.parseSelectionPredicate)(model, c.selection) // FIXME: remove casting once TS is no longer dumb about it\n      : (0, _predicate.expression)(model, c.test); // FIXME: remove casting once TS is no longer dumb about it\n\n      return Object.assign({\n        test\n      }, conditionValueRef);\n    });\n    return {\n      [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n    };\n  } else {\n    return valueRef !== undefined ? {\n      [vgChannel]: valueRef\n    } : {};\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":20,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":20,"column":9}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":20,"column":22}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":20,"column":23}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":20,"column":28}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":20,"column":30}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":20,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":20,"column":42}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":20,"column":51}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":20,"column":53}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":20,"column":58}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":24,"column":33},"generated":{"line":20,"column":60}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":21,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":21,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":21,"column":17}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":21,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":41},"generated":{"line":21,"column":54}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":21,"column":64}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":56},"generated":{"line":21,"column":69}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":66},"generated":{"line":21,"column":79}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":67},"generated":{"line":21,"column":80}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":21,"column":89}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":22,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":22,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":16},"generated":{"line":22,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":19},"generated":{"line":22,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":22,"column":24}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":25},"generated":{"line":22,"column":25}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":22,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":22,"column":36}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":24,"column":6}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":24,"column":15}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":24,"column":17}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":25,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":25,"column":10}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":20},"generated":{"line":25,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":25,"column":23}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":25,"column":44}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":25,"column":53}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":25,"column":54}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":26,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":26,"column":10}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":26,"column":22}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":26,"column":25}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":26,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":36},"generated":{"line":26,"column":36}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":26,"column":39}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":40},"generated":{"line":26,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":41},"generated":{"line":26,"column":41}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":44},"generated":{"line":26,"column":45}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":27,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":27,"column":12}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":29},"generated":{"line":27,"column":29}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":32},"generated":{"line":27,"column":32}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":37},"generated":{"line":27,"column":37}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":38},"generated":{"line":27,"column":38}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":37},"generated":{"line":27,"column":39}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":27,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":28,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":12},"generated":{"line":28,"column":12}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":16},"generated":{"line":28,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":19},"generated":{"line":28,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":47},"generated":{"line":28,"column":59}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":19},"generated":{"line":28,"column":60}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":28,"column":64}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":34},"generated":{"line":28,"column":100}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":28,"column":105}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":42},"generated":{"line":28,"column":107}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":73},"generated":{"line":28,"column":108}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":74},"generated":{"line":28,"column":109}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":28,"column":118}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":19},"generated":{"line":28,"column":119}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":85},"generated":{"line":28,"column":120}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":19},"generated":{"line":29,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":29,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":29,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":29,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":29},"generated":{"line":29,"column":42}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":60},"generated":{"line":29,"column":43}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":61},"generated":{"line":29,"column":44}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":29,"column":48}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":49}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":44},"generated":{"line":29,"column":50}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":68},"generated":{"line":29,"column":51}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":31,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":31,"column":13}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":31,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":31,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":31,"column":26}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":31,"column":27}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":32,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":32,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":33,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":33,"column":7}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":33,"column":9}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":33,"column":26}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":33,"column":27}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":39,"column":5},"generated":{"line":34,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":34,"column":5}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":34,"column":6}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":35,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":40,"column":11},"generated":{"line":35,"column":11}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":36,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":36,"column":7}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":36,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":19},"generated":{"line":36,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":20},"generated":{"line":36,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":36,"column":23}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":19},"generated":{"line":36,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":37},"generated":{"line":36,"column":37}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":41},"generated":{"line":36,"column":41}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":49},"generated":{"line":36,"column":49}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":54},"generated":{"line":36,"column":54}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":41},"generated":{"line":36,"column":63}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":66},"generated":{"line":36,"column":66}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":67},"generated":{"line":36,"column":67}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":66},"generated":{"line":36,"column":75}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":41},"generated":{"line":36,"column":76}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":79},"generated":{"line":36,"column":79}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":37},"generated":{"line":36,"column":81}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":19},"generated":{"line":36,"column":82}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":40,"column":11},"generated":{"line":37,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":37,"column":5}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":43,"column":3},"generated":{"line":38,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":38,"column":3}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":38,"column":9}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":39,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":39,"column":11}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":19},"generated":{"line":39,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":39,"column":24}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":39,"column":33}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":39,"column":36}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":37},"generated":{"line":40,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":38},"generated":{"line":40,"column":7}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":37},"generated":{"line":40,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":50},"generated":{"line":40,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":41,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":41,"column":5}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":62},"generated":{"line":41,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":41,"column":10}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":45,"column":3},"generated":{"line":42,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":46,"column":1},"generated":{"line":43,"column":0}}],"sources":{"../../../../../src/compile/mark/encode/conditional.ts":"import {SignalRef} from 'vega';\nimport {array} from 'vega-util';\nimport {\n  ChannelDef,\n  ConditionalPredicate,\n  ConditionalSelection,\n  isConditionalDef,\n  isConditionalSelection\n} from '../../../channeldef';\nimport {GuideEncodingConditionalValueDef} from '../../../guide';\nimport {VgEncodeEntry, VgValueRef} from '../../../vega.schema';\nimport {expression} from '../../predicate';\nimport {parseSelectionPredicate} from '../../selection/parse';\nimport {UnitModel} from '../../unit';\n\n/**\n * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition\n * or a simple mixin if channel def has no condition.\n */\nexport function wrapCondition<CD extends ChannelDef | GuideEncodingConditionalValueDef | SignalRef>(\n  model: UnitModel,\n  channelDef: CD,\n  vgChannel: string,\n  refFn: (cDef: CD) => VgValueRef\n): VgEncodeEntry {\n  const condition = isConditionalDef<CD>(channelDef) && channelDef.condition;\n  const valueRef = refFn(channelDef);\n  if (condition) {\n    const conditions = array(condition);\n    const vgConditions = conditions.map(c => {\n      const conditionValueRef = refFn(c);\n      const test = isConditionalSelection<any>(c)\n        ? parseSelectionPredicate(model, (c as ConditionalSelection<any>).selection) // FIXME: remove casting once TS is no longer dumb about it\n        : expression(model, (c as ConditionalPredicate<any>).test); // FIXME: remove casting once TS is no longer dumb about it\n      return {\n        test,\n        ...conditionValueRef\n      };\n    });\n    return {\n      [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n    };\n  } else {\n    return valueRef !== undefined ? {[vgChannel]: valueRef} : {};\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"bc57055ca4f857f02cda7ad9c8fe112e","cacheData":{"env":{}}}
{"id":"../node_modules/@tensorflow/tfjs-layers/dist/keras_format/initializer_config.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-layers\\dist\\keras_format\\initializer_config.js.map","includedInParent":true,"mtime":1595498163436},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-layers\\src\\keras_format\\initializer_config.ts","includedInParent":true,"mtime":1595498163436},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1595498163436}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializerClassNames = exports.VALID_DISTRIBUTION_VALUES = exports.VALID_FAN_MODE_VALUES = void 0;\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nconst VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\nexports.VALID_FAN_MODE_VALUES = VALID_FAN_MODE_VALUES;\nconst VALID_DISTRIBUTION_VALUES = ['normal', 'uniform', 'truncatedNormal']; // We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\n * A string array of valid Initializer class names.\n *\n * This is guaranteed to match the `InitializerClassName` union type.\n */\n\nexports.VALID_DISTRIBUTION_VALUES = VALID_DISTRIBUTION_VALUES;\nconst initializerClassNames = ['Zeros', 'Ones', 'Constant', 'RandomNormal', 'RandomUniform', 'TruncatedNormal', 'VarianceScaling', 'Orthogonal', 'Identity'];\nexports.initializerClassNames = initializerClassNames;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":17,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":17,"column":6}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":34},"generated":{"line":17,"column":27}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":30}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":38},"generated":{"line":17,"column":31}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":38}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":47},"generated":{"line":17,"column":40}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":48}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":57},"generated":{"line":17,"column":50}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":58}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":17,"column":59}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":7},"generated":{"line":19,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":19,"column":6}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":38},"generated":{"line":19,"column":31}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":34}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":19,"column":35}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":43}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":15},"generated":{"line":19,"column":45}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":54}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":26},"generated":{"line":19,"column":56}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":73}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":7},"generated":{"line":19,"column":74}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":101,"column":0},"generated":{"line":19,"column":76}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":102,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":103,"column":0},"generated":{"line":21,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":105,"column":0},"generated":{"line":23,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":30,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":13},"generated":{"line":30,"column":6}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":34},"generated":{"line":30,"column":27}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":30}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":30,"column":31}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":38}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":11},"generated":{"line":30,"column":40}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":46}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":19},"generated":{"line":30,"column":48}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":58}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":31},"generated":{"line":30,"column":60}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":74}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":47},"generated":{"line":30,"column":76}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":91}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":30,"column":93}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":110}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":21},"generated":{"line":30,"column":112}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":129}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":40},"generated":{"line":30,"column":131}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":143}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":54},"generated":{"line":30,"column":145}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":155}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":30,"column":156}}],"sources":{"../../src/keras_format/initializer_config.ts":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {BaseSerialization} from './types';\n\n// TODO(soergel): Move the CamelCase versions back out of keras_format\n// e.g. to src/common.ts.  Maybe even duplicate *all* of these to be pedantic?\n/** @docinline */\nexport type FanMode = 'fanIn'|'fanOut'|'fanAvg';\nexport const VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\n\n// These constants have a snake vs. camel distinction.\nexport type FanModeSerialization = 'fan_in'|'fan_out'|'fan_avg';\n\n/** @docinline */\nexport type Distribution = 'normal'|'uniform'|'truncatedNormal';\nexport const VALID_DISTRIBUTION_VALUES =\n    ['normal', 'uniform', 'truncatedNormal'];\n// These constants have a snake vs. camel distinction.\nexport type DistributionSerialization = 'normal'|'uniform'|'truncated_normal';\n\nexport type ZerosSerialization = BaseSerialization<'Zeros', {}>;\n\nexport type OnesSerialization = BaseSerialization<'Ones', {}>;\n\nexport type ConstantConfig = {\n  value: number;\n};\n\nexport type ConstantSerialization =\n    BaseSerialization<'Constant', ConstantConfig>;\n\nexport type RandomNormalConfig = {\n  mean?: number;\n  stddev?: number;\n  seed?: number;\n};\n\nexport type RandomNormalSerialization =\n    BaseSerialization<'RandomNormal', RandomNormalConfig>;\n\nexport type RandomUniformConfig = {\n  minval?: number;\n  maxval?: number;\n  seed?: number;\n};\n\nexport type RandomUniformSerialization =\n    BaseSerialization<'RandomUniform', RandomUniformConfig>;\n\nexport type TruncatedNormalConfig = {\n  mean?: number;\n  stddev?: number;\n  seed?: number;\n};\n\nexport type TruncatedNormalSerialization =\n    BaseSerialization<'TruncatedNormal', TruncatedNormalConfig>;\n\nexport type VarianceScalingConfig = {\n  scale?: number;\n\n  mode?: FanModeSerialization;\n  distribution?: DistributionSerialization;\n  seed?: number;\n};\n\nexport type VarianceScalingSerialization =\n    BaseSerialization<'VarianceScaling', VarianceScalingConfig>;\n\nexport type OrthogonalConfig = {\n  seed?: number;\n  gain?: number;\n};\n\nexport type OrthogonalSerialization =\n    BaseSerialization<'Orthogonal', OrthogonalConfig>;\n\nexport type IdentityConfig = {\n  gain?: number;\n};\n\nexport type IdentitySerialization =\n    BaseSerialization<'Identity', IdentityConfig>;\n\n// Update initializerClassNames below in concert with this.\nexport type InitializerSerialization = ZerosSerialization|OnesSerialization|\n    ConstantSerialization|RandomUniformSerialization|RandomNormalSerialization|\n    TruncatedNormalSerialization|IdentitySerialization|\n    VarianceScalingSerialization|OrthogonalSerialization;\n\nexport type InitializerClassName = InitializerSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\n * A string array of valid Initializer class names.\n *\n * This is guaranteed to match the `InitializerClassName` union type.\n */\nexport const initializerClassNames: InitializerClassName[] = [\n  'Zeros', 'Ones', 'Constant', 'RandomNormal', 'RandomUniform',\n  'TruncatedNormal', 'VarianceScaling', 'Orthogonal', 'Identity'\n];\n"},"lineCount":null}},"error":null,"hash":"4d4b113c261aa11023d373333849b0c2","cacheData":{"env":{}}}
{"id":"../node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\lrn_grad_gpu.js.map","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\lrn_grad_gpu.ts","includedInParent":true,"mtime":1595498163407},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1595498163407}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LRNGradProgram = void 0;\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass LRNGradProgram {\n  constructor(inputShape, depthRadius, bias, alpha, beta) {\n    this.variableNames = ['inputImage', 'outputImage', 'dy'];\n    this.outputShape = [];\n    this.outputShape = inputShape;\n    this.depth = inputShape[3];\n    this.depthRadius = depthRadius;\n    this.bias = bias;\n    this.alpha = alpha;\n    this.beta = beta;\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${depthRadius})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${depthRadius} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${alpha}) * norm + float(${bias});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${alpha})\n                * float(${beta})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${beta});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `;\n  }\n\n}\n\nexports.LRNGradProgram = LRNGradProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":24,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":24,"column":6}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":24,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":24,"column":21}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":2}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":13}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":25,"column":14}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":24}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":25,"column":26}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":37}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":31,"column":49},"generated":{"line":25,"column":39}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":43}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":31,"column":63},"generated":{"line":25,"column":45}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":50}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":25,"column":52}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":25,"column":56}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":32,"column":18},"generated":{"line":25,"column":58}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":22}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":25}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":26,"column":26}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":38}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":33},"generated":{"line":26,"column":40}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":53}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":48},"generated":{"line":26,"column":55}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":26,"column":59}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":60}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":27,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":27,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":27,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":27,"column":23}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":27,"column":25}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":28,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":28,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":28,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":28,"column":23}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":28,"column":33}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":29,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":29,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":29,"column":14}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":17},"generated":{"line":29,"column":17}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":27},"generated":{"line":29,"column":27}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":28},"generated":{"line":29,"column":28}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":27},"generated":{"line":29,"column":29}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":29,"column":30}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":30,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":30,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":30,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":30,"column":23}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":30,"column":34}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":31,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":31,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":31,"column":13}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":31,"column":16}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":31,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":32,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":32,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":32,"column":14}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":37,"column":17},"generated":{"line":32,"column":17}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":32,"column":22}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":33,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":33,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":33,"column":13}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":33,"column":16}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":33,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":34,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":34,"column":9}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":34,"column":17}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":34,"column":20}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":47,"column":30},"generated":{"line":42,"column":30}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":47,"column":35},"generated":{"line":42,"column":35}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":47,"column":40},"generated":{"line":42,"column":40}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":48,"column":52},"generated":{"line":43,"column":52}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":48,"column":63},"generated":{"line":43,"column":63}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":49,"column":41},"generated":{"line":44,"column":41}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":44,"column":46}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":49,"column":51},"generated":{"line":44,"column":51}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":50,"column":26},"generated":{"line":45,"column":26}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":50,"column":37},"generated":{"line":45,"column":37}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":53,"column":38},"generated":{"line":48,"column":38}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":53,"column":43},"generated":{"line":48,"column":43}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":53,"column":48},"generated":{"line":48,"column":48}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":68,"column":25},"generated":{"line":63,"column":25}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":68,"column":30},"generated":{"line":63,"column":30}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":68,"column":50},"generated":{"line":63,"column":50}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":68,"column":54},"generated":{"line":63,"column":54}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":75,"column":41},"generated":{"line":70,"column":41}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":75,"column":46},"generated":{"line":70,"column":46}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":76,"column":26},"generated":{"line":71,"column":26}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":76,"column":30},"generated":{"line":71,"column":30}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":80,"column":42},"generated":{"line":75,"column":42}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":80,"column":46},"generated":{"line":75,"column":46}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":89,"column":5}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":95,"column":3},"generated":{"line":90,"column":0}},{"source":"../src/lrn_grad_gpu.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":92,"column":0}}],"sources":{"../src/lrn_grad_gpu.ts":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class LRNGradProgram implements GPGPUProgram {\n  variableNames = ['inputImage', 'outputImage', 'dy'];\n  outputShape: number[] = [];\n  userCode: string;\n  depthRadius: number;\n  bias: number;\n  alpha: number;\n  beta: number;\n  depth: number;\n\n  constructor(\n      inputShape: number[], depthRadius: number, bias: number, alpha: number,\n      beta: number) {\n    this.outputShape = inputShape;\n    this.depth = inputShape[3];\n    this.depthRadius = depthRadius;\n    this.bias = bias;\n    this.alpha = alpha;\n    this.beta = beta;\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${depthRadius})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${depthRadius} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${alpha}) * norm + float(${bias});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${alpha})\n                * float(${beta})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${beta});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"48941b3f660f8a5cef851934fc22b613","cacheData":{"env":{}}}
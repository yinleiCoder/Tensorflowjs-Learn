{"id":"../node_modules/@tensorflow/tfjs-vis/dist/components/surface.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\components\\surface.js.map","includedInParent":true,"mtime":1595569813578},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\package.json","includedInParent":true,"mtime":1595569813578},{"name":"preact","loc":{"line":19,"column":25},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\components\\surface.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\preact\\dist\\preact.esm.js"},{"name":"glamor","loc":{"line":20,"column":25},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\components\\surface.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\glamor\\lib\\index.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst preact_1 = require(\"preact\");\nconst glamor_1 = require(\"glamor\");\n/**\n * A surface is container for visualizations and other rendered thigns.\n * It consists of a containing DOM Element, a label and an empty drawArea.\n */\nclass SurfaceComponent extends preact_1.Component {\n    componentDidMount() {\n        const { name, tab } = this.props;\n        this.props.registerSurface(name, tab, this);\n    }\n    componentDidUpdate() {\n        // Prevent re-rendering of this component as it\n        // is primarily controlled outside of this class\n        return false;\n    }\n    render() {\n        const { name, visible, styles } = this.props;\n        const finalStyles = Object.assign({}, SurfaceComponent.defaultStyles, styles);\n        const { width, height, } = finalStyles;\n        let { maxHeight, maxWidth, } = finalStyles;\n        maxHeight = height === SurfaceComponent.defaultStyles.height ?\n            maxHeight : height;\n        maxWidth = width === SurfaceComponent.defaultStyles.width ?\n            maxWidth : width;\n        const surfaceStyle = glamor_1.css({\n            display: visible ? 'block' : 'none',\n            backgroundColor: 'white',\n            marginTop: '10px',\n            marginBottom: '10px',\n            boxShadow: '0 0 6px -3px #777',\n            padding: '10px !important',\n            height,\n            width,\n            maxHeight,\n            maxWidth,\n            overflow: 'auto',\n        });\n        const labelStyle = glamor_1.css({\n            backgroundColor: 'white',\n            boxSizing: 'border-box',\n            borderBottom: '1px solid #357EDD',\n            lineHeight: '2em',\n            marginBottom: '20px',\n            fontWeight: '600',\n            textAlign: 'center',\n        });\n        const drawAreaStyle = glamor_1.css({\n            boxSizing: 'border-box',\n        });\n        return (preact_1.h(\"div\", { className: `${surfaceStyle} tf-surface`, ref: (r) => this.container = r, \"data-visible\": visible },\n            preact_1.h(\"div\", { className: `${labelStyle} tf-label`, ref: (r) => this.label = r }, name),\n            preact_1.h(\"div\", { className: `${drawAreaStyle} tf-draw-area`, ref: (r) => this.drawArea = r })));\n    }\n}\nSurfaceComponent.defaultStyles = {\n    maxWidth: '550px',\n    maxHeight: '580px',\n    height: 'auto',\n    width: 'auto',\n};\nexports.SurfaceComponent = SurfaceComponent;\n"},"sourceMaps":{"js":{"version":3,"file":"surface.js","sourceRoot":"","sources":["../../src/components/surface.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,mCAAsC;AACtC,mCAA6B;AAU7B;;;GAGG;AACH,MAAa,gBAAiB,SAAQ,kBAAuB;IAa3D,iBAAiB;QACf,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,kBAAkB;QAChB,+CAA+C;QAC/C,gDAAgD;QAChD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7C,MAAM,WAAW,qBACZ,gBAAgB,CAAC,aAAa,EAC9B,MAAM,CACV,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,GAAG,WAAW,CAAC;QACvC,IAAI,EAAE,SAAS,EAAE,QAAQ,GAAG,GAAG,WAAW,CAAC;QAC3C,SAAS,GAAG,MAAM,KAAK,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;QACrB,QAAQ,GAAG,KAAK,KAAK,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACzD,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;QAEnB,MAAM,YAAY,GAAG,YAAG,CAAC;YACvB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;YACnC,eAAe,EAAE,OAAO;YACxB,SAAS,EAAE,MAAM;YACjB,YAAY,EAAE,MAAM;YACpB,SAAS,EAAE,mBAAmB;YAC9B,OAAO,EAAE,iBAAiB;YAC1B,MAAM;YACN,KAAK;YACL,SAAS;YACT,QAAQ;YACR,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG,YAAG,CAAC;YACrB,eAAe,EAAE,OAAO;YACxB,SAAS,EAAE,YAAY;YACvB,YAAY,EAAE,mBAAmB;YACjC,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,MAAM;YACpB,UAAU,EAAE,KAAK;YACjB,SAAS,EAAE,QAAQ;SACpB,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,YAAG,CAAC;YACxB,SAAS,EAAE,YAAY;SACxB,CAAC,CAAC;QAEH,OAAO,CACL,oBACE,SAAS,EAAE,GAAG,YAAY,aAAa,EACvC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,kBAChB,OAAO;YAErB,oBAAK,SAAS,EAAE,GAAG,UAAU,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IACjE,IAAI,CACD;YAEN,oBACE,SAAS,EAAE,GAAG,aAAa,eAAe,EAC1C,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAC7B,CACE,CACP,CAAC;IACJ,CAAC;;AAhFM,8BAAa,GAA0B;IAC5C,QAAQ,EAAE,OAAO;IACjB,SAAS,EAAE,OAAO;IAClB,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;CACd,CAAC;AAPJ,4CAmFC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport { h, Component } from 'preact';\nimport { css } from 'glamor';\nimport { SurfaceInfoStrict, StyleOptions } from '../types';\n\n// Internal Props\ninterface SurfaceProps extends SurfaceInfoStrict {\n  visible: boolean;\n  registerSurface: (name: string, tab: string, surface: SurfaceComponent)\n    => void;\n}\n\n/**\n * A surface is container for visualizations and other rendered thigns.\n * It consists of a containing DOM Element, a label and an empty drawArea.\n */\nexport class SurfaceComponent extends Component<SurfaceProps> {\n\n  static defaultStyles: Partial<StyleOptions> = {\n    maxWidth: '550px',\n    maxHeight: '580px',\n    height: 'auto',\n    width: 'auto',\n  };\n\n  container: HTMLElement;\n  label: HTMLElement;\n  drawArea: HTMLElement;\n\n  componentDidMount() {\n    const { name, tab } = this.props;\n    this.props.registerSurface(name, tab, this);\n  }\n\n  componentDidUpdate() {\n    // Prevent re-rendering of this component as it\n    // is primarily controlled outside of this class\n    return false;\n  }\n\n  render() {\n    const { name, visible, styles } = this.props;\n    const finalStyles = {\n      ...SurfaceComponent.defaultStyles,\n      ...styles,\n    };\n\n    const { width, height, } = finalStyles;\n    let { maxHeight, maxWidth, } = finalStyles;\n    maxHeight = height === SurfaceComponent.defaultStyles.height ?\n      maxHeight : height;\n    maxWidth = width === SurfaceComponent.defaultStyles.width ?\n      maxWidth : width;\n\n    const surfaceStyle = css({\n      display: visible ? 'block' : 'none',\n      backgroundColor: 'white',\n      marginTop: '10px',\n      marginBottom: '10px',\n      boxShadow: '0 0 6px -3px #777',\n      padding: '10px !important',\n      height,\n      width,\n      maxHeight,\n      maxWidth,\n      overflow: 'auto',\n    });\n\n    const labelStyle = css({\n      backgroundColor: 'white',\n      boxSizing: 'border-box',\n      borderBottom: '1px solid #357EDD',\n      lineHeight: '2em',\n      marginBottom: '20px',\n      fontWeight: '600',\n      textAlign: 'center',\n    });\n\n    const drawAreaStyle = css({\n      boxSizing: 'border-box',\n    });\n\n    return (\n      <div\n        className={`${surfaceStyle} tf-surface`}\n        ref={(r) => this.container = r}\n        data-visible={visible}\n      >\n        <div className={`${labelStyle} tf-label`} ref={(r) => this.label = r}>\n          {name}\n        </div>\n\n        <div\n          className={`${drawAreaStyle} tf-draw-area`}\n          ref={(r) => this.drawArea = r}\n        />\n      </div>\n    );\n  }\n}\n"]}},"error":null,"hash":"043dd5ebd4a30055ed40cdc23b9c461e","cacheData":{"env":{}}}
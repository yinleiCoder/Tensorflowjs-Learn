{"id":"../node_modules/@tensorflow/tfjs-data/dist/iterators/byte_chunk_iterator.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\byte_chunk_iterator.js.map","includedInParent":true,"mtime":1595498163410},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\src\\iterators\\byte_chunk_iterator.ts","includedInParent":true,"mtime":1595498163410},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\package.json","includedInParent":true,"mtime":1595498163410},{"name":"@tensorflow/tfjs-core","loc":{"line":18,"column":20},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\byte_chunk_iterator.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"./lazy_iterator","loc":{"line":19,"column":48},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\byte_chunk_iterator.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\lazy_iterator.js"},{"name":"./string_iterator","loc":{"line":20,"column":31},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\byte_chunk_iterator.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\string_iterator.js"},{"name":"string_decoder","loc":{"line":88,"column":46},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\byte_chunk_iterator.js","resolved":"C:\\Users\\10991\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"buffer","parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-data\\dist\\iterators\\byte_chunk_iterator.js","resolved":"C:\\Users\\10991\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ByteChunkIterator = void 0;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar _lazy_iterator = require(\"./lazy_iterator\");\n\nvar _string_iterator = require(\"./string_iterator\");\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nclass ByteChunkIterator extends _lazy_iterator.LazyIterator {\n  /**\n   * Decode a stream of UTF8-encoded byte arrays to a stream of strings.\n   *\n   * The byte arrays producetd from the ByteChunkIterator on which this is\n   * called will be interpreted as concatenated.  No assumptions are made about\n   * the boundaries of the incoming chunks, so a multi-byte UTF8 encoding of a\n   * character may span the boundary between chunks.  This naturally happens,\n   * for instance, when reading fixed-size byte arrays from a file.\n   */\n  decodeUTF8() {\n    return new Utf8Iterator(this);\n  }\n\n} // ============================================================================\n// The following private classes serve to implement the chainable methods\n// on ByteChunkIterator.  Unfortunately they can't be placed in separate files,\n// due to resulting trouble with circular imports.\n// ============================================================================\n// We wanted multiple inheritance, e.g.\n//   class Utf8Iterator extends QueueIterator<string>, StringIterator\n// but the TypeScript mixin approach is a bit hacky, so we take this adapter\n// approach instead.\n\n\nexports.ByteChunkIterator = ByteChunkIterator;\n\nclass Utf8Iterator extends _string_iterator.StringIterator {\n  constructor(upstream) {\n    super();\n    this.upstream = upstream;\n    this.impl = new Utf8IteratorImpl(upstream);\n  }\n\n  summary() {\n    return this.impl.summary();\n  }\n\n  async next() {\n    return this.impl.next();\n  }\n\n}\n/**\n * Decode a stream of UTF8-encoded byte arrays to a stream of strings.\n *\n * This is tricky because the incoming byte array boundaries may disrupt a\n * multi-byte UTF8 character. Thus any incomplete character data at the end of\n * a chunk must be carried over and prepended to the next chunk before\n * decoding. Luckily with native decoder, TextDecoder in browser and\n * string_decoder in node, byte array boundaries are handled automatically.\n *\n * In the context of an input pipeline for machine learning, UTF8 decoding is\n * needed to parse text files containing training examples or prediction\n * requests (e.g., formatted as CSV or JSON). We cannot use the built-in\n * decoding provided by FileReader.readAsText() because here we are in a\n * streaming context, which FileReader does not support.\n *\n * @param upstream A `LazyIterator` of `Uint8Arrays` containing UTF8-encoded\n *   text, which should be interpreted as concatenated.  No assumptions are\n *   made about the boundaries of the incoming chunks, so a multi-byte UTF8\n *   encoding of a character may span the boundary between chunks.  This\n *   naturally happens, for instance, when reading fixed-size byte arrays from a\n *   file.\n */\n\n\nclass Utf8IteratorImpl extends _lazy_iterator.OneToManyIterator {\n  constructor(upstream) {\n    super();\n    this.upstream = upstream;\n\n    if ((0, _tfjsCore.env)().get('IS_BROWSER')) {\n      this.decoder = new TextDecoder('utf-8');\n    } else {\n      // tslint:disable-next-line:no-require-imports\n      const {\n        StringDecoder\n      } = require('string_decoder');\n\n      this.decoder = new StringDecoder('utf8');\n    }\n  }\n\n  summary() {\n    return `${this.upstream.summary()} -> Utf8`;\n  }\n\n  async pump() {\n    const chunkResult = await this.upstream.next();\n    let chunk;\n\n    if (chunkResult.done) {\n      return false;\n    } else {\n      chunk = chunkResult.value;\n    }\n\n    let text;\n\n    if ((0, _tfjsCore.env)().get('IS_BROWSER')) {\n      text = this.decoder.decode(chunk, {\n        stream: true\n      });\n    } else {\n      text = this.decoder.write(Buffer.from(chunk.buffer));\n    }\n\n    this.outputQueue.push(text);\n    return true;\n  }\n\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":15,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":32,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":22},"generated":{"line":32,"column":6}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":32,"column":23}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":48},"generated":{"line":32,"column":32}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":32,"column":59}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":72},"generated":{"line":32,"column":60}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":33,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":42,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":42,"column":2}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":33,"column":12},"generated":{"line":42,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":33,"column":12},"generated":{"line":42,"column":15}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":43,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":43,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":15},"generated":{"line":43,"column":15}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":43,"column":27}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":28},"generated":{"line":43,"column":28}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":43,"column":32}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":43,"column":33}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":35,"column":3},"generated":{"line":44,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":23,"column":72},"generated":{"line":46,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":46,"column":2}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":47,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":48,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":49,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":50,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":51,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":53,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":54,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":59,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":59,"column":6}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":59,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":27},"generated":{"line":59,"column":27}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":59,"column":58}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":41},"generated":{"line":59,"column":59}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":2}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":60,"column":14}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":22}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":58},"generated":{"line":60,"column":24}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":61,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":62,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":62,"column":9}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":62,"column":17}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":62,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":62,"column":28}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":63,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":63,"column":9}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":63,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":63,"column":16}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":20},"generated":{"line":63,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":63,"column":36}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":37},"generated":{"line":63,"column":37}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":63,"column":45}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":63,"column":46}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":55,"column":3},"generated":{"line":64,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":66,"column":2}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":66,"column":9}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":66,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":67,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":67,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":16},"generated":{"line":67,"column":16}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":67,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":21},"generated":{"line":67,"column":21}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":67,"column":28}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":67,"column":30}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":59,"column":3},"generated":{"line":68,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":70,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":61,"column":8},"generated":{"line":70,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":70,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":61,"column":12},"generated":{"line":70,"column":15}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":71,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":71,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":71,"column":16}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":71,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":21},"generated":{"line":71,"column":21}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":71,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":71,"column":27}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":63,"column":3},"generated":{"line":72,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":49,"column":41},"generated":{"line":74,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":66,"column":0},"generated":{"line":75,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":99,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":99,"column":6}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":99,"column":22}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":31},"generated":{"line":99,"column":31}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":99,"column":63}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":56},"generated":{"line":99,"column":64}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":100,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":100,"column":2}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":100,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":33},"generated":{"line":100,"column":14}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":100,"column":22}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":67},"generated":{"line":100,"column":24}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":101,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":33},"generated":{"line":102,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":33},"generated":{"line":102,"column":9}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":33},"generated":{"line":102,"column":17}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":33},"generated":{"line":102,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":94,"column":33},"generated":{"line":102,"column":28}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":104,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":8},"generated":{"line":104,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":14},"generated":{"line":104,"column":29}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":8},"generated":{"line":104,"column":32}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":18},"generated":{"line":104,"column":33}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":8},"generated":{"line":104,"column":45}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":104,"column":46}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":104,"column":48}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":105,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":11},"generated":{"line":105,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":105,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":21},"generated":{"line":105,"column":21}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":25},"generated":{"line":105,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":21},"generated":{"line":105,"column":36}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":37},"generated":{"line":105,"column":37}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":21},"generated":{"line":105,"column":44}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":105,"column":45}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":98,"column":5},"generated":{"line":106,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":106,"column":5}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":98,"column":11},"generated":{"line":106,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":99,"column":6},"generated":{"line":107,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":6},"generated":{"line":108,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":12},"generated":{"line":108,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":13},"generated":{"line":109,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":13},"generated":{"line":109,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":12},"generated":{"line":110,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":30},"generated":{"line":110,"column":10}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":110,"column":17}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":38},"generated":{"line":110,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":110,"column":34}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":100,"column":6},"generated":{"line":110,"column":35}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":112,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":11},"generated":{"line":112,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":112,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":21},"generated":{"line":112,"column":21}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":25},"generated":{"line":112,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":21},"generated":{"line":112,"column":38}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":39},"generated":{"line":112,"column":39}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":21},"generated":{"line":112,"column":45}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":112,"column":46}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":102,"column":5},"generated":{"line":113,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":103,"column":3},"generated":{"line":114,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":104,"column":2},"generated":{"line":116,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":104,"column":2},"generated":{"line":116,"column":2}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":116,"column":9}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":116,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":117,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":11},"generated":{"line":117,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":14},"generated":{"line":117,"column":14}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":19},"generated":{"line":117,"column":19}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":14},"generated":{"line":117,"column":27}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":28},"generated":{"line":117,"column":28}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":14},"generated":{"line":117,"column":35}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":37},"generated":{"line":117,"column":37}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":117,"column":47}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":106,"column":3},"generated":{"line":118,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":108,"column":2},"generated":{"line":120,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":108,"column":8},"generated":{"line":120,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":108,"column":2},"generated":{"line":120,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":108,"column":12},"generated":{"line":120,"column":15}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":121,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":10},"generated":{"line":121,"column":10}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":21},"generated":{"line":121,"column":21}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":24},"generated":{"line":121,"column":24}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":30},"generated":{"line":121,"column":30}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":35},"generated":{"line":121,"column":35}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":30},"generated":{"line":121,"column":43}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":44},"generated":{"line":121,"column":44}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":30},"generated":{"line":121,"column":48}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":121,"column":50}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":122,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":110,"column":8},"generated":{"line":122,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":122,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":124,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":8},"generated":{"line":124,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":19},"generated":{"line":124,"column":19}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":20},"generated":{"line":124,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":124,"column":24}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":26},"generated":{"line":124,"column":26}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":112,"column":6},"generated":{"line":125,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":112,"column":13},"generated":{"line":125,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":112,"column":6},"generated":{"line":125,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":113,"column":5},"generated":{"line":126,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":126,"column":5}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":113,"column":11},"generated":{"line":126,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":6},"generated":{"line":127,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":6},"generated":{"line":127,"column":6}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":11},"generated":{"line":127,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":14},"generated":{"line":127,"column":14}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":25},"generated":{"line":127,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":26},"generated":{"line":127,"column":26}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":114,"column":6},"generated":{"line":127,"column":31}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":115,"column":5},"generated":{"line":128,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":130,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":117,"column":8},"generated":{"line":130,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":130,"column":12}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":132,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":8},"generated":{"line":132,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":14},"generated":{"line":132,"column":29}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":8},"generated":{"line":132,"column":32}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":18},"generated":{"line":132,"column":33}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":8},"generated":{"line":132,"column":45}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":132,"column":46}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":33},"generated":{"line":132,"column":48}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":6},"generated":{"line":133,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":6},"generated":{"line":133,"column":6}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":10},"generated":{"line":133,"column":10}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":13},"generated":{"line":133,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":18},"generated":{"line":133,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":13},"generated":{"line":133,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":26},"generated":{"line":133,"column":26}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":13},"generated":{"line":133,"column":32}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":33},"generated":{"line":133,"column":33}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":13},"generated":{"line":133,"column":38}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":40},"generated":{"line":133,"column":40}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":41},"generated":{"line":134,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":41},"generated":{"line":134,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":47},"generated":{"line":134,"column":14}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":49},"generated":{"line":134,"column":16}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":40},"generated":{"line":135,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":13},"generated":{"line":135,"column":7}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":119,"column":6},"generated":{"line":135,"column":8}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":120,"column":5},"generated":{"line":136,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":136,"column":5}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":120,"column":11},"generated":{"line":136,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":137,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":137,"column":6}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":10},"generated":{"line":137,"column":10}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":13},"generated":{"line":137,"column":13}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":18},"generated":{"line":137,"column":18}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":13},"generated":{"line":137,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":26},"generated":{"line":137,"column":26}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":13},"generated":{"line":137,"column":31}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":32},"generated":{"line":137,"column":32}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":38},"generated":{"line":137,"column":38}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":39},"generated":{"line":137,"column":39}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":32},"generated":{"line":137,"column":43}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":44},"generated":{"line":137,"column":44}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":49},"generated":{"line":137,"column":49}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":50},"generated":{"line":137,"column":50}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":32},"generated":{"line":137,"column":56}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":13},"generated":{"line":137,"column":57}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":137,"column":58}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":122,"column":5},"generated":{"line":138,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":140,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":9},"generated":{"line":140,"column":9}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":140,"column":20}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":21},"generated":{"line":140,"column":21}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":140,"column":25}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":26},"generated":{"line":140,"column":26}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":140,"column":30}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":141,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":124,"column":11},"generated":{"line":141,"column":11}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":141,"column":15}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":125,"column":3},"generated":{"line":142,"column":0}},{"source":"../../src/iterators/byte_chunk_iterator.ts","name":null,"original":{"line":88,"column":56},"generated":{"line":144,"column":0}}],"sources":{"../../src/iterators/byte_chunk_iterator.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\nimport {LazyIterator, OneToManyIterator} from './lazy_iterator';\nimport {StringIterator} from './string_iterator';\n\nexport abstract class ByteChunkIterator extends LazyIterator<Uint8Array> {\n  /**\n   * Decode a stream of UTF8-encoded byte arrays to a stream of strings.\n   *\n   * The byte arrays producetd from the ByteChunkIterator on which this is\n   * called will be interpreted as concatenated.  No assumptions are made about\n   * the boundaries of the incoming chunks, so a multi-byte UTF8 encoding of a\n   * character may span the boundary between chunks.  This naturally happens,\n   * for instance, when reading fixed-size byte arrays from a file.\n   */\n  decodeUTF8(): StringIterator {\n    return new Utf8Iterator(this);\n  }\n}\n\n// ============================================================================\n// The following private classes serve to implement the chainable methods\n// on ByteChunkIterator.  Unfortunately they can't be placed in separate files,\n// due to resulting trouble with circular imports.\n// ============================================================================\n\n// We wanted multiple inheritance, e.g.\n//   class Utf8Iterator extends QueueIterator<string>, StringIterator\n// but the TypeScript mixin approach is a bit hacky, so we take this adapter\n// approach instead.\n\nclass Utf8Iterator extends StringIterator {\n  private impl: Utf8IteratorImpl;\n\n  constructor(protected upstream: LazyIterator<Uint8Array>) {\n    super();\n    this.impl = new Utf8IteratorImpl(upstream);\n  }\n\n  summary() {\n    return this.impl.summary();\n  }\n\n  async next() {\n    return this.impl.next();\n  }\n}\n\n/**\n * Decode a stream of UTF8-encoded byte arrays to a stream of strings.\n *\n * This is tricky because the incoming byte array boundaries may disrupt a\n * multi-byte UTF8 character. Thus any incomplete character data at the end of\n * a chunk must be carried over and prepended to the next chunk before\n * decoding. Luckily with native decoder, TextDecoder in browser and\n * string_decoder in node, byte array boundaries are handled automatically.\n *\n * In the context of an input pipeline for machine learning, UTF8 decoding is\n * needed to parse text files containing training examples or prediction\n * requests (e.g., formatted as CSV or JSON). We cannot use the built-in\n * decoding provided by FileReader.readAsText() because here we are in a\n * streaming context, which FileReader does not support.\n *\n * @param upstream A `LazyIterator` of `Uint8Arrays` containing UTF8-encoded\n *   text, which should be interpreted as concatenated.  No assumptions are\n *   made about the boundaries of the incoming chunks, so a multi-byte UTF8\n *   encoding of a character may span the boundary between chunks.  This\n *   naturally happens, for instance, when reading fixed-size byte arrays from a\n *   file.\n */\nclass Utf8IteratorImpl extends OneToManyIterator<string> {\n  // `decoder` as `any` here to dynamically assign value based on the\n  // environment.\n  // tslint:disable-next-line:no-any\n  decoder: any;\n\n  constructor(protected readonly upstream: LazyIterator<Uint8Array>) {\n    super();\n    if (env().get('IS_BROWSER')) {\n      this.decoder = new TextDecoder('utf-8');\n    } else {\n      // tslint:disable-next-line:no-require-imports\n      const {StringDecoder} = require('string_decoder');\n      this.decoder = new StringDecoder('utf8');\n    }\n  }\n  summary() {\n    return `${this.upstream.summary()} -> Utf8`;\n  }\n\n  async pump(): Promise<boolean> {\n    const chunkResult = await this.upstream.next();\n    let chunk;\n    if (chunkResult.done) {\n      return false;\n    } else {\n      chunk = chunkResult.value;\n    }\n\n    let text: string;\n    if (env().get('IS_BROWSER')) {\n      text = this.decoder.decode(chunk, {stream: true});\n    } else {\n      text = this.decoder.write(Buffer.from(chunk.buffer));\n    }\n    this.outputQueue.push(text);\n    return true;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"7709ba287b142e636ab8efc4e10b0147","cacheData":{"env":{}}}
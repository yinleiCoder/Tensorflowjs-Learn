{"id":"../node_modules/@tensorflow/tfjs-vis/dist/show/tensor.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\show\\tensor.js.map","includedInParent":true,"mtime":1595569813578},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\package.json","includedInParent":true,"mtime":1595569813578},{"name":"../render/histogram","loc":{"line":27,"column":28},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\show\\tensor.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\histogram.js"},{"name":"../render/render_utils","loc":{"line":28,"column":31},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\show\\tensor.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\render\\render_utils.js"},{"name":"../util/math","loc":{"line":29,"column":23},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\show\\tensor.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-vis\\dist\\util\\math.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst histogram_1 = require(\"../render/histogram\");\nconst render_utils_1 = require(\"../render/render_utils\");\nconst math_1 = require(\"../util/math\");\n/**\n * Shows a histogram with the distribution of all values in a given tensor.\n *\n * ```js\n * const tensor = tf.tensor1d([0, 0, 0, 0, 2, 3, 4]);\n *\n * const surface = {name: 'Values Distribution', tab: 'Model Inspection'};\n * await tfvis.show.valuesDistribution(surface, tensor);\n * ```\n *\n */\n/**\n * @doc {heading: 'Models & Tensors', subheading: 'Model Inspection', namespace:\n * 'show'}\n */\nfunction valuesDistribution(container, tensor) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const drawArea = render_utils_1.getDrawArea(container);\n        const stats = yield math_1.tensorStats(tensor);\n        const values = yield tensor.data();\n        histogram_1.histogram(drawArea, values, { height: 150, stats });\n    });\n}\nexports.valuesDistribution = valuesDistribution;\n"},"sourceMaps":{"js":{"version":3,"file":"tensor.js","sourceRoot":"","sources":["../../src/show/tensor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;AAIH,mDAA8C;AAC9C,yDAAmD;AAEnD,uCAAyC;AAEzC;;;;;;;;;;GAUG;AACH;;;GAGG;AACH,SAAsB,kBAAkB,CAAC,SAAmB,EAAE,MAAc;;QAC1E,MAAM,QAAQ,GAAG,0BAAW,CAAC,SAAS,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,CAAC;QACxC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACnC,qBAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;IACpD,CAAC;CAAA;AALD,gDAKC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs';\n\nimport {histogram} from '../render/histogram';\nimport {getDrawArea} from '../render/render_utils';\nimport {Drawable} from '../types';\nimport {tensorStats} from '../util/math';\n\n/**\n * Shows a histogram with the distribution of all values in a given tensor.\n *\n * ```js\n * const tensor = tf.tensor1d([0, 0, 0, 0, 2, 3, 4]);\n *\n * const surface = {name: 'Values Distribution', tab: 'Model Inspection'};\n * await tfvis.show.valuesDistribution(surface, tensor);\n * ```\n *\n */\n/**\n * @doc {heading: 'Models & Tensors', subheading: 'Model Inspection', namespace:\n * 'show'}\n */\nexport async function valuesDistribution(container: Drawable, tensor: Tensor) {\n  const drawArea = getDrawArea(container);\n  const stats = await tensorStats(tensor);\n  const values = await tensor.data();\n  histogram(drawArea, values, {height: 150, stats});\n}\n"]}},"error":null,"hash":"2554d6cef5bc25dce73e5653837b672d","cacheData":{"env":{}}}
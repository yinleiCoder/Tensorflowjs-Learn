{"id":"../node_modules/vega-lite/build/src/compile/mark/encode/offset.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\offset.js.map","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\src\\compile\\mark\\encode\\offset.ts","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\package.json","includedInParent":true,"mtime":1595569810471},{"name":"../../../channel","loc":{"line":1,"column":33},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\compile\\mark\\encode\\offset.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\channel.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOffset = getOffset;\n\nvar _channel = require(\"../../../channel\");\n\nfunction getOffset(channel, markDef) {\n  const offsetChannel = (0, _channel.getOffsetChannel)(channel); // TODO: in the future read from encoding channel too\n\n  const markDefOffsetValue = markDef[offsetChannel];\n\n  if (markDefOffsetValue) {\n    return markDefOffsetValue;\n  }\n\n  return undefined;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":18}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":26},"generated":{"line":10,"column":19}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":26}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":75},"generated":{"line":10,"column":28}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":10,"column":35}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":91},"generated":{"line":10,"column":37}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":11,"column":8}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":11,"column":21}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":11,"column":24}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":41},"generated":{"line":11,"column":55}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":11,"column":62}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":63}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":91},"generated":{"line":11,"column":64}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":11,"column":65}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":13,"column":8}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":13,"column":26}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":29},"generated":{"line":13,"column":29}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":36},"generated":{"line":13,"column":36}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":37},"generated":{"line":13,"column":37}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":36},"generated":{"line":13,"column":50}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":13,"column":51}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":24}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":26},"generated":{"line":15,"column":26}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":16,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":14,"column":11},"generated":{"line":16,"column":11}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":16,"column":29}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":17,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":19,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":17,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":19,"column":18}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":18,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../../../../src/compile/mark/encode/offset.ts":"/**\n * Utility files for producing Vega ValueRef for marks\n */\nimport {SignalRef} from 'vega-typings/types';\nimport {getOffsetChannel, PolarPositionChannel, PositionChannel} from '../../../channel';\nimport {MarkDef} from '../../../mark';\n\nexport function getOffset(channel: PositionChannel | PolarPositionChannel, markDef: MarkDef): number | SignalRef {\n  const offsetChannel = getOffsetChannel(channel);\n\n  // TODO: in the future read from encoding channel too\n  const markDefOffsetValue = markDef[offsetChannel];\n  if (markDefOffsetValue) {\n    return markDefOffsetValue;\n  }\n\n  return undefined;\n}\n"},"lineCount":null}},"error":null,"hash":"afd63a8092bccdea4c04691f4bd55d19","cacheData":{"env":{}}}
{"id":"../node_modules/vega-lite/build/src/spec/repeat.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\spec\\repeat.js.map","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\src\\spec\\repeat.ts","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\package.json","includedInParent":true,"mtime":1595569810471},{"name":"vega-util","loc":{"line":1,"column":24},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\spec\\repeat.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-util\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isRepeatSpec = isRepeatSpec;\nexports.isLayerRepeatSpec = isLayerRepeatSpec;\n\nvar _vegaUtil = require(\"vega-util\");\n\nfunction isRepeatSpec(spec) {\n  return 'repeat' in spec;\n}\n\nfunction isLayerRepeatSpec(spec) {\n  return !(0, _vegaUtil.isArray)(spec.repeat) && spec.repeat['layer'];\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":11,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":11,"column":9}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":11,"column":21}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":29},"generated":{"line":11,"column":22}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":11,"column":26}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":43},"generated":{"line":11,"column":28}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":12,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":12,"column":9}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":12,"column":21}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":12,"column":25}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":61,"column":1},"generated":{"line":13,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":15,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":16},"generated":{"line":15,"column":9}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":15,"column":26}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":15,"column":27}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":15,"column":31}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":50},"generated":{"line":15,"column":33}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":16,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":16,"column":9}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":16,"column":10}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":18},"generated":{"line":16,"column":33}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":22},"generated":{"line":16,"column":37}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":23},"generated":{"line":16,"column":38}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":16,"column":44}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":16,"column":45}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":16,"column":49}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":38},"generated":{"line":16,"column":53}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":39},"generated":{"line":16,"column":54}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":16,"column":60}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":16,"column":61}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":16,"column":68}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":16,"column":69}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":17,"column":0}}],"sources":{"../../../src/spec/repeat.ts":"import {isArray} from 'vega-util';\nimport {GenericSpec, LayerSpec} from '.';\nimport {FieldName} from '../channeldef';\nimport {BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins} from './base';\nimport {FacetedUnitSpec, UnitSpec} from './unit';\n\nexport interface RepeatMapping {\n  /**\n   * An array of fields to be repeated vertically.\n   */\n  row?: string[];\n\n  /**\n   * An array of fields to be repeated horizontally.\n   */\n  column?: string[];\n}\n\nexport interface LayerRepeatMapping extends RepeatMapping {\n  /**\n   * An array of fields to be repeated as layers.\n   */\n  layer: string[];\n}\n\nexport type RepeatSpec = NonLayerRepeatSpec | LayerRepeatSpec;\n\n/**\n * Base interface for a repeat specification.\n */\nexport interface NonLayerRepeatSpec extends BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins {\n  /**\n   * Definition for fields to be repeated. One of:\n   * 1) An array of fields to be repeated. If `\"repeat\"` is an array, the field can be referred to as `{\"repeat\": \"repeat\"}`. The repeated views are laid out in a wrapped row. You can set the number of columns to control the wrapping.\n   * 2) An object that maps `\"row\"` and/or `\"column\"` to the listed fields to be repeated along the particular orientations. The objects `{\"repeat\": \"row\"}` and `{\"repeat\": \"column\"}` can be used to refer to the repeated field respectively.\n   */\n  repeat: string[] | RepeatMapping;\n\n  /**\n   * A specification of the view that gets repeated.\n   */\n  spec: GenericSpec<FacetedUnitSpec, LayerSpec, RepeatSpec, FieldName>;\n}\n\nexport interface LayerRepeatSpec extends BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins {\n  /**\n   * Definition for fields to be repeated. One of:\n   * 1) An array of fields to be repeated. If `\"repeat\"` is an array, the field can be referred to as `{\"repeat\": \"repeat\"}`. The repeated views are laid out in a wrapped row. You can set the number of columns to control the wrapping.\n   * 2) An object that maps `\"row\"` and/or `\"column\"` to the listed fields to be repeated along the particular orientations. The objects `{\"repeat\": \"row\"}` and `{\"repeat\": \"column\"}` can be used to refer to the repeated field respectively.\n   */\n  repeat: LayerRepeatMapping;\n\n  /**\n   * A specification of the view that gets repeated.\n   */\n  spec: LayerSpec | UnitSpec;\n}\n\nexport function isRepeatSpec(spec: BaseSpec): spec is RepeatSpec {\n  return 'repeat' in spec;\n}\n\nexport function isLayerRepeatSpec(spec: RepeatSpec): spec is LayerRepeatSpec {\n  return !isArray(spec.repeat) && spec.repeat['layer'];\n}\n"},"lineCount":null}},"error":null,"hash":"a65bca623b46c08a7e643edb7f568976","cacheData":{"env":{}}}
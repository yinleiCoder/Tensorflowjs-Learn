{"id":"../node_modules/vega-lite/build/src/selection.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\selection.js.map","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\src\\selection.ts","includedInParent":true,"mtime":1595569810471},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\package.json","includedInParent":true,"mtime":1595569810471},{"name":"vega-util","loc":{"line":1,"column":25},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-lite\\build\\src\\selection.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\vega-util\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLegendBinding = isLegendBinding;\nexports.isLegendStreamBinding = isLegendStreamBinding;\nexports.defaultConfig = exports.SELECTION_ID = void 0;\n\nvar _vegaUtil = require(\"vega-util\");\n\nconst SELECTION_ID = '_vgsid_';\nexports.SELECTION_ID = SELECTION_ID;\nconst defaultConfig = {\n  single: {\n    on: 'click',\n    fields: [SELECTION_ID],\n    resolve: 'global',\n    empty: 'all',\n    clear: 'dblclick'\n  },\n  multi: {\n    on: 'click',\n    fields: [SELECTION_ID],\n    toggle: 'event.shiftKey',\n    resolve: 'global',\n    empty: 'all',\n    clear: 'dblclick'\n  },\n  interval: {\n    on: '[mousedown, window:mouseup] > window:mousemove!',\n    encodings: ['x', 'y'],\n    translate: '[mousedown, window:mouseup] > window:mousemove!',\n    zoom: 'wheel!',\n    mark: {\n      fill: '#333',\n      fillOpacity: 0.125,\n      stroke: 'white'\n    },\n    resolve: 'global',\n    clear: 'dblclick'\n  }\n};\nexports.defaultConfig = defaultConfig;\n\nfunction isLegendBinding(bind) {\n  return !!bind && (bind === 'legend' || !!bind.legend);\n}\n\nfunction isLegendStreamBinding(bind) {\n  return isLegendBinding(bind) && (0, _vegaUtil.isObject)(bind);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/selection.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":12,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":12,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":12,"column":18}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":12,"column":21}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":12,"column":30}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":7},"generated":{"line":14,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":13},"generated":{"line":14,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":26},"generated":{"line":14,"column":19}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":46},"generated":{"line":14,"column":22}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":2},"generated":{"line":15,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":2},"generated":{"line":15,"column":2}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":8},"generated":{"line":15,"column":8}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":15,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":313,"column":4},"generated":{"line":16,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":313,"column":4},"generated":{"line":16,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":313,"column":6},"generated":{"line":16,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":313,"column":8},"generated":{"line":16,"column":8}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":16,"column":15}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":4},"generated":{"line":17,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":4},"generated":{"line":17,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":10},"generated":{"line":17,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":12},"generated":{"line":17,"column":12}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":13},"generated":{"line":17,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":12},"generated":{"line":17,"column":25}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":17,"column":26}},{"source":"../../src/selection.ts","name":null,"original":{"line":315,"column":4},"generated":{"line":18,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":315,"column":4},"generated":{"line":18,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":315,"column":11},"generated":{"line":18,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":315,"column":13},"generated":{"line":18,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":18,"column":21}},{"source":"../../src/selection.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":19,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":19,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":316,"column":9},"generated":{"line":19,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":316,"column":11},"generated":{"line":19,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":19,"column":16}},{"source":"../../src/selection.ts","name":null,"original":{"line":317,"column":4},"generated":{"line":20,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":317,"column":4},"generated":{"line":20,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":317,"column":9},"generated":{"line":20,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":317,"column":11},"generated":{"line":20,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":21,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":46},"generated":{"line":21,"column":3}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":2},"generated":{"line":22,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":2},"generated":{"line":22,"column":2}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":7},"generated":{"line":22,"column":7}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":22,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":320,"column":4},"generated":{"line":23,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":320,"column":4},"generated":{"line":23,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":320,"column":6},"generated":{"line":23,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":320,"column":8},"generated":{"line":23,"column":8}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":23,"column":15}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":4},"generated":{"line":24,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":4},"generated":{"line":24,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":10},"generated":{"line":24,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":12},"generated":{"line":24,"column":12}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":13},"generated":{"line":24,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":12},"generated":{"line":24,"column":25}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":24,"column":26}},{"source":"../../src/selection.ts","name":null,"original":{"line":322,"column":4},"generated":{"line":25,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":322,"column":4},"generated":{"line":25,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":322,"column":10},"generated":{"line":25,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":322,"column":12},"generated":{"line":25,"column":12}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":25,"column":28}},{"source":"../../src/selection.ts","name":null,"original":{"line":323,"column":4},"generated":{"line":26,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":323,"column":4},"generated":{"line":26,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":323,"column":11},"generated":{"line":26,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":323,"column":13},"generated":{"line":26,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":26,"column":21}},{"source":"../../src/selection.ts","name":null,"original":{"line":324,"column":4},"generated":{"line":27,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":324,"column":4},"generated":{"line":27,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":324,"column":9},"generated":{"line":27,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":324,"column":11},"generated":{"line":27,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":27,"column":16}},{"source":"../../src/selection.ts","name":null,"original":{"line":325,"column":4},"generated":{"line":28,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":325,"column":4},"generated":{"line":28,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":325,"column":9},"generated":{"line":28,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":325,"column":11},"generated":{"line":28,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":29,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":46},"generated":{"line":29,"column":3}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":2},"generated":{"line":30,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":2},"generated":{"line":30,"column":2}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":10},"generated":{"line":30,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":30,"column":12}},{"source":"../../src/selection.ts","name":null,"original":{"line":328,"column":4},"generated":{"line":31,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":328,"column":4},"generated":{"line":31,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":31,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":328,"column":8},"generated":{"line":31,"column":8}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":31,"column":57}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":4},"generated":{"line":32,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":4},"generated":{"line":32,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":13},"generated":{"line":32,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":15},"generated":{"line":32,"column":15}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":16},"generated":{"line":32,"column":16}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":15},"generated":{"line":32,"column":19}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":21},"generated":{"line":32,"column":21}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":15},"generated":{"line":32,"column":24}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":32,"column":25}},{"source":"../../src/selection.ts","name":null,"original":{"line":330,"column":4},"generated":{"line":33,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":330,"column":4},"generated":{"line":33,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":330,"column":13},"generated":{"line":33,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":330,"column":15},"generated":{"line":33,"column":15}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":33,"column":64}},{"source":"../../src/selection.ts","name":null,"original":{"line":331,"column":4},"generated":{"line":34,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":331,"column":4},"generated":{"line":34,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":331,"column":8},"generated":{"line":34,"column":8}},{"source":"../../src/selection.ts","name":null,"original":{"line":331,"column":10},"generated":{"line":34,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":34,"column":18}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":4},"generated":{"line":35,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":4},"generated":{"line":35,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":8},"generated":{"line":35,"column":8}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":10},"generated":{"line":35,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":11},"generated":{"line":36,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":11},"generated":{"line":36,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":15},"generated":{"line":36,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":17},"generated":{"line":36,"column":12}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":10},"generated":{"line":36,"column":18}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":25},"generated":{"line":37,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":25},"generated":{"line":37,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":36},"generated":{"line":37,"column":17}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":38},"generated":{"line":37,"column":19}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":10},"generated":{"line":37,"column":24}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":45},"generated":{"line":38,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":45},"generated":{"line":38,"column":6}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":51},"generated":{"line":38,"column":12}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":53},"generated":{"line":38,"column":14}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":10},"generated":{"line":39,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":39,"column":5}},{"source":"../../src/selection.ts","name":null,"original":{"line":333,"column":4},"generated":{"line":40,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":333,"column":4},"generated":{"line":40,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":333,"column":11},"generated":{"line":40,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":333,"column":13},"generated":{"line":40,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":40,"column":21}},{"source":"../../src/selection.ts","name":null,"original":{"line":334,"column":4},"generated":{"line":41,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":334,"column":4},"generated":{"line":41,"column":4}},{"source":"../../src/selection.ts","name":null,"original":{"line":334,"column":9},"generated":{"line":41,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":334,"column":11},"generated":{"line":41,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":42,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":46},"generated":{"line":43,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":7},"generated":{"line":43,"column":1}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":6},"generated":{"line":46,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":16},"generated":{"line":46,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":6},"generated":{"line":46,"column":24}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":32},"generated":{"line":46,"column":25}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":6},"generated":{"line":46,"column":29}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":41},"generated":{"line":46,"column":31}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":2},"generated":{"line":47,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":9},"generated":{"line":47,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":10},"generated":{"line":47,"column":10}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":11},"generated":{"line":47,"column":11}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":9},"generated":{"line":47,"column":15}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":20},"generated":{"line":47,"column":20}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":24},"generated":{"line":47,"column":24}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":29},"generated":{"line":47,"column":29}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":20},"generated":{"line":47,"column":37}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":41},"generated":{"line":47,"column":41}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":42},"generated":{"line":47,"column":42}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":43},"generated":{"line":47,"column":43}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":47},"generated":{"line":47,"column":47}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":48},"generated":{"line":47,"column":48}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":9},"generated":{"line":47,"column":54}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":2},"generated":{"line":47,"column":55}},{"source":"../../src/selection.ts","name":null,"original":{"line":340,"column":1},"generated":{"line":48,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":6},"generated":{"line":50,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":16},"generated":{"line":50,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":6},"generated":{"line":50,"column":30}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":38},"generated":{"line":50,"column":31}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":6},"generated":{"line":50,"column":35}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":47},"generated":{"line":50,"column":37}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":2},"generated":{"line":51,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":9},"generated":{"line":51,"column":9}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":24},"generated":{"line":51,"column":24}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":25},"generated":{"line":51,"column":25}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":24},"generated":{"line":51,"column":29}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":9},"generated":{"line":51,"column":30}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":34},"generated":{"line":51,"column":34}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":43},"generated":{"line":51,"column":58}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":34},"generated":{"line":51,"column":62}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":2},"generated":{"line":51,"column":63}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":52,"column":0}}],"sources":{"../../src/selection.ts":"import {Binding, Color, Cursor, Stream, Vector2} from 'vega';\nimport {isObject} from 'vega-util';\nimport {SingleDefUnitChannel} from './channel';\nimport {FieldName, PrimitiveValue} from './channeldef';\nimport {DateTime} from './datetime';\nimport {Dict} from './util';\n\nexport const SELECTION_ID = '_vgsid_';\nexport type SelectionType = 'single' | 'multi' | 'interval';\nexport type SelectionResolution = 'global' | 'union' | 'intersect';\n\nexport type SelectionInit = PrimitiveValue | DateTime;\nexport type SelectionInitInterval = Vector2<boolean> | Vector2<number> | Vector2<string> | Vector2<DateTime>;\n\nexport type SelectionInitMapping = Dict<SelectionInit>;\nexport type SelectionInitIntervalMapping = Dict<SelectionInitInterval>;\n\nexport type LegendStreamBinding = {legend: string | Stream};\nexport type LegendBinding = 'legend' | LegendStreamBinding;\n\nexport interface BaseSelectionConfig {\n  /**\n   * Clears the selection, emptying it of all values. Can be a\n   * [Event Stream](https://vega.github.io/vega/docs/event-streams/) or `false` to disable.\n   *\n   * __Default value:__ `dblclick`.\n   *\n   * __See also:__ [`clear`](https://vega.github.io/vega-lite/docs/clear.html) documentation.\n   */\n  clear?: Stream | string | boolean;\n\n  /**\n   * A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\n   * For interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters).\n   */\n  on?: Stream | string;\n  /**\n   * With layered and multi-view displays, a strategy that determines how\n   * selections' data queries are resolved when applied in a filter transform,\n   * conditional encoding rule, or scale domain.\n   *\n   * __See also:__ [`resolve`](https://vega.github.io/vega-lite/docs/selection-resolve.html) documentation.\n   */\n  resolve?: SelectionResolution;\n\n  // TODO(https://github.com/vega/vega-lite/issues/2596).\n  // predicate?: string;\n  // domain?: SelectionDomain;\n\n  /**\n   * An array of encoding channels. The corresponding data field values\n   * must match for a data tuple to fall within the selection.\n   *\n   * __See also:__ [`encodings`](https://vega.github.io/vega-lite/docs/project.html) documentation.\n   */\n  encodings?: SingleDefUnitChannel[];\n\n  /**\n   * An array of field names whose values must match for a data tuple to\n   * fall within the selection.\n   *\n   * __See also:__ [`fields`](https://vega.github.io/vega-lite/docs/project.html) documentation.\n   */\n  fields?: FieldName[];\n\n  /**\n   * By default, `all` data values are considered to lie within an empty selection.\n   * When set to `none`, empty selections contain no data values.\n   */\n  empty?: 'all' | 'none';\n}\n\nexport interface SingleSelectionConfig extends BaseSelectionConfig {\n  /**\n   * When set, a selection is populated by input elements (also known as dynamic query widgets)\n   * or by interacting with the corresponding legend. Direct manipulation interaction is disabled by default;\n   * to re-enable it, set the selection's [`on`](https://vega.github.io/vega-lite/docs/selection.html#common-selection-properties) property.\n   *\n   * Legend bindings are restricted to selections that only specify a single field or encoding.\n   *\n   * Query widget binding takes the form of Vega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\n   * or can be a mapping between projected field/encodings and binding definitions.\n   *\n   * __See also:__ [`bind`](https://vega.github.io/vega-lite/docs/bind.html) documentation.\n   */\n  bind?: Binding | Record<string, Binding> | LegendBinding;\n\n  /**\n   * When true, an invisible voronoi diagram is computed to accelerate discrete\n   * selection. The data value _nearest_ the mouse cursor is added to the selection.\n   *\n   * __See also:__ [`nearest`](https://vega.github.io/vega-lite/docs/nearest.html) documentation.\n   */\n  nearest?: boolean;\n\n  /**\n   * Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and initial values.\n   *\n   * __See also:__ [`init`](https://vega.github.io/vega-lite/docs/init.html) documentation.\n   */\n  init?: SelectionInitMapping;\n}\n\nexport interface MultiSelectionConfig extends BaseSelectionConfig {\n  /**\n   * Controls whether data values should be toggled or only ever inserted into\n   * multi selections. Can be `true`, `false` (for insertion only), or a\n   * [Vega expression](https://vega.github.io/vega/docs/expressions/).\n   *\n   * __Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\n   * data values are toggled when a user interacts with the shift-key pressed).\n   *\n   * Setting the value to the Vega expression `\"true\"` will toggle data values\n   * without the user pressing the shift-key.\n   *\n   * __See also:__ [`toggle`](https://vega.github.io/vega-lite/docs/toggle.html) documentation.\n   */\n  toggle?: string | boolean;\n\n  /**\n   * When true, an invisible voronoi diagram is computed to accelerate discrete\n   * selection. The data value _nearest_ the mouse cursor is added to the selection.\n   *\n   * __See also:__ [`nearest`](https://vega.github.io/vega-lite/docs/nearest.html) documentation.\n   */\n  nearest?: boolean;\n\n  /**\n   * Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and an initial\n   * value (or array of values).\n   *\n   * __See also:__ [`init`](https://vega.github.io/vega-lite/docs/init.html) documentation.\n   */\n  init?: SelectionInitMapping[];\n\n  /**\n   * When set, a selection is populated by interacting with the corresponding legend. Direct manipulation interaction is disabled by default;\n   * to re-enable it, set the selection's [`on`](https://vega.github.io/vega-lite/docs/selection.html#common-selection-properties) property.\n   *\n   * Legend bindings are restricted to selections that only specify a single field or encoding.\n   */\n  bind?: LegendBinding;\n}\n\n// Similar to BaseMarkConfig but the field documentations are specificly for an interval mark.\nexport interface BrushConfig {\n  /**\n   * The fill color of the interval mark.\n   *\n   * __Default value:__ `\"#333333\"`\n   *\n   */\n  fill?: Color;\n  /**\n   * The fill opacity of the interval mark (a value between `0` and `1`).\n   *\n   * __Default value:__ `0.125`\n   */\n  fillOpacity?: number;\n  /**\n   * The stroke color of the interval mark.\n   *\n   * __Default value:__ `\"#ffffff\"`\n   */\n  stroke?: Color;\n  /**\n   * The stroke opacity of the interval mark (a value between `0` and `1`).\n   */\n  strokeOpacity?: number;\n  /**\n   * The stroke width of the interval mark.\n   */\n  strokeWidth?: number;\n  /**\n   * An array of alternating stroke and space lengths, for creating dashed or dotted lines.\n   */\n  strokeDash?: number[];\n  /**\n   * The offset (in pixels) with which to begin drawing the stroke dash array.\n   */\n  strokeDashOffset?: number;\n  /**\n   * The mouse cursor used over the interval mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used.\n   */\n  cursor?: Cursor;\n}\n\nexport interface IntervalSelectionConfig extends BaseSelectionConfig {\n  /**\n   * When truthy, allows a user to interactively move an interval selection\n   * back-and-forth. Can be `true`, `false` (to disable panning), or a\n   * [Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\n   * which must include a start and end event to trigger continuous panning.\n   *\n   * __Default value:__ `true`, which corresponds to\n   * `[mousedown, window:mouseup] > window:mousemove!` which corresponds to\n   * clicks and dragging within an interval selection to reposition it.\n   *\n   * __See also:__ [`translate`](https://vega.github.io/vega-lite/docs/translate.html) documentation.\n   */\n  translate?: string | boolean;\n\n  /**\n   * When truthy, allows a user to interactively resize an interval selection.\n   * Can be `true`, `false` (to disable zooming), or a [Vega event stream\n   * definition](https://vega.github.io/vega/docs/event-streams/). Currently,\n   * only `wheel` events are supported.\n   *\n   * __Default value:__ `true`, which corresponds to `wheel!`.\n   *\n   * __See also:__ [`zoom`](https://vega.github.io/vega-lite/docs/zoom.html) documentation.\n   */\n  zoom?: string | boolean;\n\n  /**\n   * Establishes a two-way binding between the interval selection and the scales\n   * used within the same view. This allows a user to interactively pan and\n   * zoom the view.\n   *\n   * __See also:__ [`bind`](https://vega.github.io/vega-lite/docs/bind.html) documentation.\n   */\n  bind?: 'scales';\n\n  /**\n   * An interval selection also adds a rectangle mark to depict the\n   * extents of the interval. The `mark` property can be used to customize the\n   * appearance of the mark.\n   *\n   * __See also:__ [`mark`](https://vega.github.io/vega-lite/docs/selection-mark.html) documentation.\n   */\n  mark?: BrushConfig;\n\n  /**\n   * Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and arrays of\n   * initial values.\n   *\n   * __See also:__ [`init`](https://vega.github.io/vega-lite/docs/init.html) documentation.\n   */\n  init?: SelectionInitIntervalMapping;\n}\n\nexport interface BaseSelectionDef<T extends 'single' | 'multi' | 'interval'> {\n  /**\n   * Determines the default event processing and data query for the selection. Vega-Lite currently supports three selection types:\n   *\n   * - `\"single\"` -- to select a single discrete data value on `click`.\n   * - `\"multi\"` -- to select multiple discrete data value; the first value is selected on `click` and additional values toggled on shift-`click`.\n   * - `\"interval\"` -- to select a continuous range of data values on `drag`.\n   */\n  type: T;\n}\n\nexport interface SingleSelection extends BaseSelectionDef<'single'>, SingleSelectionConfig {}\n\nexport interface MultiSelection extends BaseSelectionDef<'multi'>, MultiSelectionConfig {}\n\nexport interface IntervalSelection extends BaseSelectionDef<'interval'>, IntervalSelectionConfig {}\n\nexport type SelectionDef = SingleSelection | MultiSelection | IntervalSelection;\n\nexport type SelectionExtent =\n  | {\n      /**\n       * The name of a selection.\n       */\n      selection: string;\n      /**\n       * The field name to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\n       * over multiple fields or encodings.\n       */\n      field?: FieldName;\n    }\n  | {\n      /**\n       * The name of a selection.\n       */\n      selection: string;\n      /**\n       * The encoding channel to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\n       * over multiple fields or encodings.\n       */\n      encoding?: SingleDefUnitChannel;\n    };\n\nexport interface SelectionConfig {\n  /**\n   * The default definition for a [`single`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n   *  for a single selection definition (except `type`) may be specified here.\n   *\n   * For instance, setting `single` to `{\"on\": \"dblclick\"}` populates single selections on double-click by default.\n   */\n  single?: SingleSelectionConfig;\n  /**\n   * The default definition for a [`multi`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n   * for a multi selection definition (except `type`) may be specified here.\n   *\n   * For instance, setting `multi` to `{\"toggle\": \"event.altKey\"}` adds additional values to\n   * multi selections when clicking with the alt-key pressed by default.\n   */\n  multi?: MultiSelectionConfig;\n  /**\n   * The default definition for an [`interval`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n   * for an interval selection definition (except `type`) may be specified here.\n   *\n   * For instance, setting `interval` to `{\"translate\": false}` disables the ability to move\n   * interval selections by default.\n   */\n  interval?: IntervalSelectionConfig;\n}\n\nexport const defaultConfig: SelectionConfig = {\n  single: {\n    on: 'click',\n    fields: [SELECTION_ID],\n    resolve: 'global',\n    empty: 'all',\n    clear: 'dblclick'\n  },\n  multi: {\n    on: 'click',\n    fields: [SELECTION_ID],\n    toggle: 'event.shiftKey',\n    resolve: 'global',\n    empty: 'all',\n    clear: 'dblclick'\n  },\n  interval: {\n    on: '[mousedown, window:mouseup] > window:mousemove!',\n    encodings: ['x', 'y'],\n    translate: '[mousedown, window:mouseup] > window:mousemove!',\n    zoom: 'wheel!',\n    mark: {fill: '#333', fillOpacity: 0.125, stroke: 'white'},\n    resolve: 'global',\n    clear: 'dblclick'\n  }\n};\n\nexport function isLegendBinding(bind: any): bind is LegendBinding {\n  return !!bind && (bind === 'legend' || !!bind.legend);\n}\n\nexport function isLegendStreamBinding(bind: any): bind is LegendStreamBinding {\n  return isLegendBinding(bind) && isObject(bind);\n}\n"},"lineCount":null}},"error":null,"hash":"866380e26defaff2f74a574abd0cf759","cacheData":{"env":{}}}
{"id":"../node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","dependencies":[{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\sparse_to_dense.js.map","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\sparse_to_dense.ts","includedInParent":true,"mtime":1595498163399},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\package.json","includedInParent":true,"mtime":1595925880834},{"name":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1595498163399},{"name":"../engine","loc":{"line":17,"column":23},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\sparse_to_dense.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\engine.js"},{"name":"../ops/sparse_to_dense_util","loc":{"line":18,"column":33},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\sparse_to_dense.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\sparse_to_dense_util.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\sparse_to_dense.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19},"parent":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\sparse_to_dense.js","resolved":"E:\\VisualStudioCodeProjects\\js机器学习\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sparseToDense = void 0;\n\nvar _engine = require(\"../engine\");\n\nvar sparse_to_dense = _interopRequireWildcard(require(\"../ops/sparse_to_dense_util\"));\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _operation = require(\"./operation\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n */\n\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape, defaultValue = 0) {\n  const $sparseIndices = (0, _tensor_util_env.convertToTensor)(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  const $sparseValues = (0, _tensor_util_env.convertToTensor)(sparseValues, 'sparseValues', 'sparseToDense');\n  const $defaultValue = (0, _tensor_util_env.convertToTensor)(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n  sparse_to_dense.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n  return _engine.ENGINE.runKernelFunc(backend => backend.sparseToDense($sparseIndices, $sparseValues, outputShape, $defaultValue), {\n    $sparseIndices,\n    $sparseValues,\n    $defaultValue\n  });\n}\n\nconst sparseToDense = (0, _operation.op)({\n  sparseToDense_\n});\nexports.sparseToDense = sparseToDense;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":37,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":61,"column":0},"generated":{"line":74,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":75,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":75,"column":9}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":75,"column":23}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":75,"column":24}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":75,"column":37}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":63,"column":38},"generated":{"line":75,"column":39}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":75,"column":51}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":75,"column":53}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":75,"column":64}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":64,"column":30},"generated":{"line":75,"column":66}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":64,"column":30},"generated":{"line":75,"column":78}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":64,"column":64},"generated":{"line":75,"column":81}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":75,"column":82}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":64,"column":65},"generated":{"line":75,"column":84}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":76,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":65,"column":8},"generated":{"line":76,"column":8}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":65,"column":22},"generated":{"line":76,"column":22}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":76,"column":25}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":22},"generated":{"line":76,"column":63}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":76,"column":76}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":37},"generated":{"line":76,"column":78}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":76,"column":93}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":54},"generated":{"line":76,"column":95}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":76,"column":110}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":71},"generated":{"line":76,"column":112}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":76,"column":119}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":76,"column":120}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":77,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":77,"column":8}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":67,"column":21},"generated":{"line":77,"column":21}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":77,"column":24}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":22},"generated":{"line":77,"column":62}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":77,"column":74}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":36},"generated":{"line":77,"column":76}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":77,"column":90}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":52},"generated":{"line":77,"column":92}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":77,"column":107}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":77,"column":108}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":78,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":78,"column":8}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":21},"generated":{"line":78,"column":21}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":24},"generated":{"line":78,"column":24}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":78,"column":62}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":24},"generated":{"line":78,"column":74}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":20},"generated":{"line":78,"column":76}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":24},"generated":{"line":78,"column":90}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":36},"generated":{"line":78,"column":92}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":24},"generated":{"line":78,"column":107}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":53},"generated":{"line":78,"column":109}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":66},"generated":{"line":78,"column":122}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":70,"column":67},"generated":{"line":78,"column":123}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":24},"generated":{"line":78,"column":128}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":78,"column":129}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":2}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":17},"generated":{"line":79,"column":17}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":18},"generated":{"line":79,"column":18}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":31}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":79,"column":32}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":46}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":22},"generated":{"line":79,"column":48}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":61}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":37},"generated":{"line":79,"column":63}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":74}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":73,"column":50},"generated":{"line":79,"column":76}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":79,"column":89}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":80,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":80,"column":9}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":16},"generated":{"line":80,"column":24}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":80,"column":37}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":6},"generated":{"line":80,"column":38}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":13},"generated":{"line":80,"column":45}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":49}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":24},"generated":{"line":80,"column":56}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":25},"generated":{"line":80,"column":57}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":70}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":80,"column":71}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":85}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":26},"generated":{"line":80,"column":87}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":100}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":41},"generated":{"line":80,"column":102}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":113}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":77,"column":54},"generated":{"line":80,"column":115}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":80,"column":128}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":80,"column":129}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":80,"column":131}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":7},"generated":{"line":81,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":7},"generated":{"line":81,"column":4}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":81,"column":18}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":23},"generated":{"line":82,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":23},"generated":{"line":82,"column":4}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":82,"column":17}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":38},"generated":{"line":83,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":38},"generated":{"line":83,"column":4}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":84,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":84,"column":3}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":84,"column":4}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":79,"column":1},"generated":{"line":85,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":87,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":13},"generated":{"line":87,"column":6}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":26},"generated":{"line":87,"column":19}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":29},"generated":{"line":87,"column":22}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":32},"generated":{"line":87,"column":41}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":33},"generated":{"line":88,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":33},"generated":{"line":88,"column":2}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":32},"generated":{"line":89,"column":0}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":29},"generated":{"line":89,"column":1}},{"source":"../../src/ops/sparse_to_dense.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":89,"column":2}}],"sources":{"../../src/ops/sparse_to_dense.ts":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport * as sparse_to_dense from '../ops/sparse_to_dense_util';\nimport {Scalar, Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ScalarLike, ShapeMap, TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction sparseToDense_<R extends Rank>(\n    sparseIndices: Tensor|TensorLike, sparseValues: Tensor|TensorLike,\n    outputShape: ShapeMap[R], defaultValue: Scalar|ScalarLike = 0): Tensor<R> {\n  const $sparseIndices =\n      convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  const $sparseValues =\n      convertToTensor(sparseValues, 'sparseValues', 'sparseToDense');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n\n  sparse_to_dense.validateInput(\n      $sparseIndices, $sparseValues, outputShape, $defaultValue);\n\n  return ENGINE.runKernelFunc(\n      backend => backend.sparseToDense(\n          $sparseIndices, $sparseValues, outputShape, $defaultValue),\n      {$sparseIndices, $sparseValues, $defaultValue});\n}\n\nexport const sparseToDense = op({sparseToDense_});\n"},"lineCount":null}},"error":null,"hash":"6d26ddbc7b44c7c2f4e683367493c8b4","cacheData":{"env":{}}}